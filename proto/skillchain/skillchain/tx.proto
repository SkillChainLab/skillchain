syntax = "proto3";
package skillchain.skillchain;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "skillchain/skillchain/params.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "skillchain/x/skillchain/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);
  rpc Burn(MsgBurn) returns (MsgBurnResponse);
  rpc CreateProfile(MsgCreateProfile) returns (MsgCreateProfileResponse);
  rpc ConvertSkillToVUSD(MsgConvertSkillToVUSD) returns (MsgConvertSkillToVUSDResponse);
  rpc ConvertVUSDToSkill(MsgConvertVUSDToSkill) returns (MsgConvertVUSDToSkillResponse);
  rpc UpdateVUSDPrice(MsgUpdateVUSDPrice) returns (MsgUpdateVUSDPriceResponse);
}

// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "skillchain/x/skillchain/MsgUpdateParams";

  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the module parameters to update.
  //
  // NOTE: All parameters must be supplied.
  Params params = 2 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}

message MsgBurn {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  cosmos.base.v1beta1.Coin amount = 2 [(gogoproto.nullable) = false];
}

message MsgBurnResponse {}

message MsgCreateProfile {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  string display_name = 2;
  string bio = 3;
  string location = 4;
  string website = 5;
  string github = 6;
  string linkedin = 7;
  string twitter = 8;
}

message MsgCreateProfileResponse {}

message MsgConvertSkillToVUSD {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  cosmos.base.v1beta1.Coin amount = 2 [(gogoproto.nullable) = false];
}

message MsgConvertSkillToVUSDResponse {
  cosmos.base.v1beta1.Coin vusd_minted = 1 [(gogoproto.nullable) = false];
  string collateral_ratio = 2;
}

message MsgConvertVUSDToSkill {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  cosmos.base.v1beta1.Coin amount = 2 [(gogoproto.nullable) = false];
}

message MsgConvertVUSDToSkillResponse {
  cosmos.base.v1beta1.Coin skill_released = 1 [(gogoproto.nullable) = false];
  string collateral_ratio = 2;
}

message MsgUpdateVUSDPrice {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  string authority = 2;
  string new_price = 3;
  int64 timestamp = 4;
}

message MsgUpdateVUSDPriceResponse {}