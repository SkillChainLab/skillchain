// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: skillchain/filestorage/file_permission.proto

package types

import (
	fmt "fmt"
	proto "github.com/cosmos/gogoproto/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type FilePermission struct {
	Index           string `protobuf:"bytes,1,opt,name=index,proto3" json:"index,omitempty"`
	FileId          string `protobuf:"bytes,2,opt,name=fileId,proto3" json:"fileId,omitempty"`
	UserAddress     string `protobuf:"bytes,3,opt,name=userAddress,proto3" json:"userAddress,omitempty"`
	PermissionLevel string `protobuf:"bytes,4,opt,name=permissionLevel,proto3" json:"permissionLevel,omitempty"`
	GrantedBy       string `protobuf:"bytes,5,opt,name=grantedBy,proto3" json:"grantedBy,omitempty"`
	GrantedAt       uint64 `protobuf:"varint,6,opt,name=grantedAt,proto3" json:"grantedAt,omitempty"`
	ExpiresAt       uint64 `protobuf:"varint,7,opt,name=expiresAt,proto3" json:"expiresAt,omitempty"`
	Creator         string `protobuf:"bytes,8,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *FilePermission) Reset()         { *m = FilePermission{} }
func (m *FilePermission) String() string { return proto.CompactTextString(m) }
func (*FilePermission) ProtoMessage()    {}
func (*FilePermission) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f593a86e850fe40, []int{0}
}
func (m *FilePermission) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *FilePermission) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_FilePermission.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *FilePermission) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FilePermission.Merge(m, src)
}
func (m *FilePermission) XXX_Size() int {
	return m.Size()
}
func (m *FilePermission) XXX_DiscardUnknown() {
	xxx_messageInfo_FilePermission.DiscardUnknown(m)
}

var xxx_messageInfo_FilePermission proto.InternalMessageInfo

func (m *FilePermission) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

func (m *FilePermission) GetFileId() string {
	if m != nil {
		return m.FileId
	}
	return ""
}

func (m *FilePermission) GetUserAddress() string {
	if m != nil {
		return m.UserAddress
	}
	return ""
}

func (m *FilePermission) GetPermissionLevel() string {
	if m != nil {
		return m.PermissionLevel
	}
	return ""
}

func (m *FilePermission) GetGrantedBy() string {
	if m != nil {
		return m.GrantedBy
	}
	return ""
}

func (m *FilePermission) GetGrantedAt() uint64 {
	if m != nil {
		return m.GrantedAt
	}
	return 0
}

func (m *FilePermission) GetExpiresAt() uint64 {
	if m != nil {
		return m.ExpiresAt
	}
	return 0
}

func (m *FilePermission) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func init() {
	proto.RegisterType((*FilePermission)(nil), "skillchain.filestorage.FilePermission")
}

func init() {
	proto.RegisterFile("skillchain/filestorage/file_permission.proto", fileDescriptor_4f593a86e850fe40)
}

var fileDescriptor_4f593a86e850fe40 = []byte{
	// 265 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0x31, 0x4f, 0xc3, 0x30,
	0x14, 0x84, 0x63, 0x68, 0x53, 0x6a, 0x24, 0x90, 0x2c, 0x54, 0x79, 0x40, 0x56, 0xc4, 0x94, 0x01,
	0x95, 0x81, 0x85, 0x35, 0x1d, 0x90, 0x90, 0x18, 0x50, 0x47, 0x16, 0x14, 0xea, 0x47, 0xb1, 0x30,
	0x71, 0xf4, 0x9e, 0x41, 0xe9, 0xbf, 0xe0, 0x67, 0x31, 0x76, 0x64, 0x44, 0xc9, 0xff, 0x40, 0xa8,
	0x2e, 0x24, 0x81, 0xcd, 0xf7, 0xdd, 0x9d, 0xf5, 0x74, 0xfc, 0x94, 0x9e, 0x8c, 0xb5, 0x8b, 0xc7,
	0xdc, 0x14, 0x67, 0x0f, 0xc6, 0x02, 0x79, 0x87, 0xf9, 0x12, 0xc2, 0xfb, 0xae, 0x04, 0x7c, 0x36,
	0x44, 0xc6, 0x15, 0xd3, 0x12, 0x9d, 0x77, 0x62, 0xd2, 0xa5, 0xa7, 0xbd, 0xf4, 0xc9, 0x17, 0xe3,
	0x07, 0x97, 0xc6, 0xc2, 0x4d, 0x5b, 0x10, 0x47, 0x7c, 0x68, 0x0a, 0x0d, 0x95, 0x64, 0x09, 0x4b,
	0xc7, 0xf3, 0xad, 0x10, 0x13, 0x1e, 0x6f, 0x7a, 0x57, 0x5a, 0xee, 0x04, 0xfc, 0xa3, 0x44, 0xc2,
	0xf7, 0x5f, 0x08, 0x30, 0xd3, 0x1a, 0x81, 0x48, 0xee, 0x06, 0xb3, 0x8f, 0x44, 0xca, 0x0f, 0xbb,
	0x73, 0xae, 0xe1, 0x15, 0xac, 0x1c, 0x84, 0xd4, 0x7f, 0x2c, 0x8e, 0xf9, 0x78, 0x89, 0x79, 0xe1,
	0x41, 0xcf, 0x56, 0x72, 0x18, 0x32, 0x1d, 0xe8, 0xb9, 0x99, 0x97, 0x71, 0xc2, 0xd2, 0xc1, 0xbc,
	0x03, 0x1b, 0x17, 0xaa, 0xd2, 0x20, 0x50, 0xe6, 0xe5, 0x68, 0xeb, 0xb6, 0x40, 0x48, 0x3e, 0x5a,
	0x20, 0xe4, 0xde, 0xa1, 0xdc, 0x0b, 0xff, 0xfe, 0xca, 0xd9, 0xc5, 0x7b, 0xad, 0xd8, 0xba, 0x56,
	0xec, 0xb3, 0x56, 0xec, 0xad, 0x51, 0xd1, 0xba, 0x51, 0xd1, 0x47, 0xa3, 0xa2, 0x5b, 0xd5, 0x1b,
	0xb8, 0xfa, 0x33, 0xb1, 0x5f, 0x95, 0x40, 0xf7, 0x71, 0x58, 0xf6, 0xfc, 0x3b, 0x00, 0x00, 0xff,
	0xff, 0x8c, 0x66, 0xbc, 0x5b, 0x89, 0x01, 0x00, 0x00,
}

func (m *FilePermission) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *FilePermission) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *FilePermission) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintFilePermission(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0x42
	}
	if m.ExpiresAt != 0 {
		i = encodeVarintFilePermission(dAtA, i, uint64(m.ExpiresAt))
		i--
		dAtA[i] = 0x38
	}
	if m.GrantedAt != 0 {
		i = encodeVarintFilePermission(dAtA, i, uint64(m.GrantedAt))
		i--
		dAtA[i] = 0x30
	}
	if len(m.GrantedBy) > 0 {
		i -= len(m.GrantedBy)
		copy(dAtA[i:], m.GrantedBy)
		i = encodeVarintFilePermission(dAtA, i, uint64(len(m.GrantedBy)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.PermissionLevel) > 0 {
		i -= len(m.PermissionLevel)
		copy(dAtA[i:], m.PermissionLevel)
		i = encodeVarintFilePermission(dAtA, i, uint64(len(m.PermissionLevel)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.UserAddress) > 0 {
		i -= len(m.UserAddress)
		copy(dAtA[i:], m.UserAddress)
		i = encodeVarintFilePermission(dAtA, i, uint64(len(m.UserAddress)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.FileId) > 0 {
		i -= len(m.FileId)
		copy(dAtA[i:], m.FileId)
		i = encodeVarintFilePermission(dAtA, i, uint64(len(m.FileId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintFilePermission(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintFilePermission(dAtA []byte, offset int, v uint64) int {
	offset -= sovFilePermission(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *FilePermission) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovFilePermission(uint64(l))
	}
	l = len(m.FileId)
	if l > 0 {
		n += 1 + l + sovFilePermission(uint64(l))
	}
	l = len(m.UserAddress)
	if l > 0 {
		n += 1 + l + sovFilePermission(uint64(l))
	}
	l = len(m.PermissionLevel)
	if l > 0 {
		n += 1 + l + sovFilePermission(uint64(l))
	}
	l = len(m.GrantedBy)
	if l > 0 {
		n += 1 + l + sovFilePermission(uint64(l))
	}
	if m.GrantedAt != 0 {
		n += 1 + sovFilePermission(uint64(m.GrantedAt))
	}
	if m.ExpiresAt != 0 {
		n += 1 + sovFilePermission(uint64(m.ExpiresAt))
	}
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovFilePermission(uint64(l))
	}
	return n
}

func sovFilePermission(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozFilePermission(x uint64) (n int) {
	return sovFilePermission(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *FilePermission) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFilePermission
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: FilePermission: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: FilePermission: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFilePermission
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFilePermission
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFilePermission
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFilePermission
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFilePermission
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFilePermission
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FileId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFilePermission
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFilePermission
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFilePermission
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UserAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PermissionLevel", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFilePermission
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFilePermission
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFilePermission
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PermissionLevel = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GrantedBy", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFilePermission
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFilePermission
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFilePermission
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GrantedBy = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GrantedAt", wireType)
			}
			m.GrantedAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFilePermission
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.GrantedAt |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExpiresAt", wireType)
			}
			m.ExpiresAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFilePermission
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ExpiresAt |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFilePermission
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFilePermission
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFilePermission
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipFilePermission(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthFilePermission
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipFilePermission(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowFilePermission
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowFilePermission
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowFilePermission
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthFilePermission
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupFilePermission
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthFilePermission
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthFilePermission        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowFilePermission          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupFilePermission = fmt.Errorf("proto: unexpected end of group")
)
