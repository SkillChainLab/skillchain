// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: skillchain/analytics/user_activity.proto

package types

import (
	fmt "fmt"
	proto "github.com/cosmos/gogoproto/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type UserActivity struct {
	Index        string `protobuf:"bytes,1,opt,name=index,proto3" json:"index,omitempty"`
	UserAddress  string `protobuf:"bytes,2,opt,name=userAddress,proto3" json:"userAddress,omitempty"`
	ActivityType string `protobuf:"bytes,3,opt,name=activityType,proto3" json:"activityType,omitempty"`
	Action       string `protobuf:"bytes,4,opt,name=action,proto3" json:"action,omitempty"`
	ResourceId   string `protobuf:"bytes,5,opt,name=resourceId,proto3" json:"resourceId,omitempty"`
	Timestamp    uint64 `protobuf:"varint,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	IpAddress    string `protobuf:"bytes,7,opt,name=ipAddress,proto3" json:"ipAddress,omitempty"`
	UserAgent    string `protobuf:"bytes,8,opt,name=userAgent,proto3" json:"userAgent,omitempty"`
	Metadata     string `protobuf:"bytes,9,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Creator      string `protobuf:"bytes,10,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *UserActivity) Reset()         { *m = UserActivity{} }
func (m *UserActivity) String() string { return proto.CompactTextString(m) }
func (*UserActivity) ProtoMessage()    {}
func (*UserActivity) Descriptor() ([]byte, []int) {
	return fileDescriptor_5dc1f936c657d52a, []int{0}
}
func (m *UserActivity) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UserActivity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UserActivity.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UserActivity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserActivity.Merge(m, src)
}
func (m *UserActivity) XXX_Size() int {
	return m.Size()
}
func (m *UserActivity) XXX_DiscardUnknown() {
	xxx_messageInfo_UserActivity.DiscardUnknown(m)
}

var xxx_messageInfo_UserActivity proto.InternalMessageInfo

func (m *UserActivity) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

func (m *UserActivity) GetUserAddress() string {
	if m != nil {
		return m.UserAddress
	}
	return ""
}

func (m *UserActivity) GetActivityType() string {
	if m != nil {
		return m.ActivityType
	}
	return ""
}

func (m *UserActivity) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *UserActivity) GetResourceId() string {
	if m != nil {
		return m.ResourceId
	}
	return ""
}

func (m *UserActivity) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *UserActivity) GetIpAddress() string {
	if m != nil {
		return m.IpAddress
	}
	return ""
}

func (m *UserActivity) GetUserAgent() string {
	if m != nil {
		return m.UserAgent
	}
	return ""
}

func (m *UserActivity) GetMetadata() string {
	if m != nil {
		return m.Metadata
	}
	return ""
}

func (m *UserActivity) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func init() {
	proto.RegisterType((*UserActivity)(nil), "skillchain.analytics.UserActivity")
}

func init() {
	proto.RegisterFile("skillchain/analytics/user_activity.proto", fileDescriptor_5dc1f936c657d52a)
}

var fileDescriptor_5dc1f936c657d52a = []byte{
	// 285 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x91, 0xbb, 0x4e, 0xc3, 0x30,
	0x14, 0x86, 0xeb, 0xd2, 0x5b, 0x0e, 0x9d, 0xac, 0x0a, 0x59, 0xa8, 0xb2, 0xa2, 0x4e, 0x99, 0xda,
	0x01, 0x89, 0xbd, 0x6c, 0xac, 0x15, 0x2c, 0x2c, 0xc8, 0x24, 0x47, 0x60, 0x91, 0x9b, 0xec, 0x53,
	0xd4, 0xbc, 0x05, 0xcf, 0xc2, 0x53, 0x30, 0x76, 0x64, 0x44, 0xc9, 0x8b, 0xa0, 0xb8, 0xcd, 0x85,
	0xf1, 0xff, 0xbe, 0x3f, 0xf1, 0x91, 0x7e, 0x08, 0xec, 0xbb, 0x8e, 0xe3, 0xf0, 0x4d, 0xe9, 0x74,
	0xa3, 0x52, 0x15, 0x17, 0xa4, 0x43, 0xbb, 0xd9, 0x5b, 0x34, 0xcf, 0x2a, 0x24, 0xfd, 0xa1, 0xa9,
	0x58, 0xe7, 0x26, 0xa3, 0x8c, 0x2f, 0xba, 0xe6, 0xba, 0x6d, 0xae, 0xbe, 0x86, 0x30, 0x7f, 0xb4,
	0x68, 0xb6, 0xe7, 0x32, 0x5f, 0xc0, 0x58, 0xa7, 0x11, 0x1e, 0x04, 0xf3, 0x59, 0xe0, 0xed, 0x4e,
	0x81, 0xfb, 0x70, 0x59, 0xff, 0x73, 0x1b, 0x45, 0x06, 0xad, 0x15, 0x43, 0xe7, 0xfa, 0x88, 0xaf,
	0x60, 0xde, 0x3c, 0xf8, 0x50, 0xe4, 0x28, 0x2e, 0x5c, 0xe5, 0x1f, 0xe3, 0x57, 0x30, 0xa9, 0x73,
	0x96, 0x8a, 0x91, 0xb3, 0xe7, 0xc4, 0x25, 0x80, 0x41, 0x9b, 0xed, 0x4d, 0x88, 0xf7, 0x91, 0x18,
	0x3b, 0xd7, 0x23, 0x7c, 0x09, 0x1e, 0xe9, 0x04, 0x2d, 0xa9, 0x24, 0x17, 0x13, 0x9f, 0x05, 0xa3,
	0x5d, 0x07, 0x6a, 0xab, 0xf3, 0xe6, 0xb2, 0xa9, 0xfb, 0xb8, 0x03, 0xb5, 0x75, 0x67, 0xbe, 0x62,
	0x4a, 0x62, 0x76, 0xb2, 0x2d, 0xe0, 0xd7, 0x30, 0x4b, 0x90, 0x54, 0xa4, 0x48, 0x09, 0xcf, 0xc9,
	0x36, 0x73, 0x01, 0xd3, 0xd0, 0xa0, 0xa2, 0xcc, 0x08, 0x70, 0xaa, 0x89, 0x77, 0xb7, 0xdf, 0xa5,
	0x64, 0xc7, 0x52, 0xb2, 0xdf, 0x52, 0xb2, 0xcf, 0x4a, 0x0e, 0x8e, 0x95, 0x1c, 0xfc, 0x54, 0x72,
	0xf0, 0xb4, 0xec, 0xcd, 0x71, 0xe8, 0x0d, 0x42, 0x45, 0x8e, 0xf6, 0x65, 0xe2, 0x96, 0xb8, 0xf9,
	0x0b, 0x00, 0x00, 0xff, 0xff, 0xac, 0xf5, 0x7c, 0x08, 0xb5, 0x01, 0x00, 0x00,
}

func (m *UserActivity) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UserActivity) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UserActivity) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintUserActivity(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0x52
	}
	if len(m.Metadata) > 0 {
		i -= len(m.Metadata)
		copy(dAtA[i:], m.Metadata)
		i = encodeVarintUserActivity(dAtA, i, uint64(len(m.Metadata)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.UserAgent) > 0 {
		i -= len(m.UserAgent)
		copy(dAtA[i:], m.UserAgent)
		i = encodeVarintUserActivity(dAtA, i, uint64(len(m.UserAgent)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.IpAddress) > 0 {
		i -= len(m.IpAddress)
		copy(dAtA[i:], m.IpAddress)
		i = encodeVarintUserActivity(dAtA, i, uint64(len(m.IpAddress)))
		i--
		dAtA[i] = 0x3a
	}
	if m.Timestamp != 0 {
		i = encodeVarintUserActivity(dAtA, i, uint64(m.Timestamp))
		i--
		dAtA[i] = 0x30
	}
	if len(m.ResourceId) > 0 {
		i -= len(m.ResourceId)
		copy(dAtA[i:], m.ResourceId)
		i = encodeVarintUserActivity(dAtA, i, uint64(len(m.ResourceId)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Action) > 0 {
		i -= len(m.Action)
		copy(dAtA[i:], m.Action)
		i = encodeVarintUserActivity(dAtA, i, uint64(len(m.Action)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.ActivityType) > 0 {
		i -= len(m.ActivityType)
		copy(dAtA[i:], m.ActivityType)
		i = encodeVarintUserActivity(dAtA, i, uint64(len(m.ActivityType)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.UserAddress) > 0 {
		i -= len(m.UserAddress)
		copy(dAtA[i:], m.UserAddress)
		i = encodeVarintUserActivity(dAtA, i, uint64(len(m.UserAddress)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintUserActivity(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintUserActivity(dAtA []byte, offset int, v uint64) int {
	offset -= sovUserActivity(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *UserActivity) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovUserActivity(uint64(l))
	}
	l = len(m.UserAddress)
	if l > 0 {
		n += 1 + l + sovUserActivity(uint64(l))
	}
	l = len(m.ActivityType)
	if l > 0 {
		n += 1 + l + sovUserActivity(uint64(l))
	}
	l = len(m.Action)
	if l > 0 {
		n += 1 + l + sovUserActivity(uint64(l))
	}
	l = len(m.ResourceId)
	if l > 0 {
		n += 1 + l + sovUserActivity(uint64(l))
	}
	if m.Timestamp != 0 {
		n += 1 + sovUserActivity(uint64(m.Timestamp))
	}
	l = len(m.IpAddress)
	if l > 0 {
		n += 1 + l + sovUserActivity(uint64(l))
	}
	l = len(m.UserAgent)
	if l > 0 {
		n += 1 + l + sovUserActivity(uint64(l))
	}
	l = len(m.Metadata)
	if l > 0 {
		n += 1 + l + sovUserActivity(uint64(l))
	}
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovUserActivity(uint64(l))
	}
	return n
}

func sovUserActivity(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozUserActivity(x uint64) (n int) {
	return sovUserActivity(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *UserActivity) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowUserActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UserActivity: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UserActivity: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUserActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUserActivity
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthUserActivity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUserActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUserActivity
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthUserActivity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UserAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActivityType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUserActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUserActivity
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthUserActivity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ActivityType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Action", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUserActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUserActivity
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthUserActivity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Action = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResourceId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUserActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUserActivity
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthUserActivity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ResourceId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Timestamp", wireType)
			}
			m.Timestamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUserActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Timestamp |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IpAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUserActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUserActivity
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthUserActivity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IpAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserAgent", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUserActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUserActivity
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthUserActivity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UserAgent = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Metadata", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUserActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUserActivity
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthUserActivity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Metadata = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUserActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUserActivity
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthUserActivity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipUserActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthUserActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipUserActivity(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowUserActivity
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowUserActivity
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowUserActivity
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthUserActivity
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupUserActivity
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthUserActivity
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthUserActivity        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowUserActivity          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupUserActivity = fmt.Errorf("proto: unexpected end of group")
)
