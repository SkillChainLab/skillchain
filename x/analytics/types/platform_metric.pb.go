// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: skillchain/analytics/platform_metric.proto

package types

import (
	fmt "fmt"
	proto "github.com/cosmos/gogoproto/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type PlatformMetric struct {
	Index       string `protobuf:"bytes,1,opt,name=index,proto3" json:"index,omitempty"`
	MetricName  string `protobuf:"bytes,2,opt,name=metricName,proto3" json:"metricName,omitempty"`
	MetricValue uint64 `protobuf:"varint,3,opt,name=metricValue,proto3" json:"metricValue,omitempty"`
	MetricType  string `protobuf:"bytes,4,opt,name=metricType,proto3" json:"metricType,omitempty"`
	Period      string `protobuf:"bytes,5,opt,name=period,proto3" json:"period,omitempty"`
	Timestamp   uint64 `protobuf:"varint,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Metadata    string `protobuf:"bytes,7,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Creator     string `protobuf:"bytes,8,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *PlatformMetric) Reset()         { *m = PlatformMetric{} }
func (m *PlatformMetric) String() string { return proto.CompactTextString(m) }
func (*PlatformMetric) ProtoMessage()    {}
func (*PlatformMetric) Descriptor() ([]byte, []int) {
	return fileDescriptor_dd8c4801d40c66a0, []int{0}
}
func (m *PlatformMetric) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PlatformMetric) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PlatformMetric.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PlatformMetric) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlatformMetric.Merge(m, src)
}
func (m *PlatformMetric) XXX_Size() int {
	return m.Size()
}
func (m *PlatformMetric) XXX_DiscardUnknown() {
	xxx_messageInfo_PlatformMetric.DiscardUnknown(m)
}

var xxx_messageInfo_PlatformMetric proto.InternalMessageInfo

func (m *PlatformMetric) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

func (m *PlatformMetric) GetMetricName() string {
	if m != nil {
		return m.MetricName
	}
	return ""
}

func (m *PlatformMetric) GetMetricValue() uint64 {
	if m != nil {
		return m.MetricValue
	}
	return 0
}

func (m *PlatformMetric) GetMetricType() string {
	if m != nil {
		return m.MetricType
	}
	return ""
}

func (m *PlatformMetric) GetPeriod() string {
	if m != nil {
		return m.Period
	}
	return ""
}

func (m *PlatformMetric) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *PlatformMetric) GetMetadata() string {
	if m != nil {
		return m.Metadata
	}
	return ""
}

func (m *PlatformMetric) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func init() {
	proto.RegisterType((*PlatformMetric)(nil), "skillchain.analytics.PlatformMetric")
}

func init() {
	proto.RegisterFile("skillchain/analytics/platform_metric.proto", fileDescriptor_dd8c4801d40c66a0)
}

var fileDescriptor_dd8c4801d40c66a0 = []byte{
	// 264 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x90, 0xc1, 0x4a, 0xf3, 0x40,
	0x14, 0x85, 0x33, 0xff, 0xdf, 0xa6, 0xed, 0x15, 0x5c, 0x0c, 0x45, 0x06, 0x29, 0x43, 0x70, 0x55,
	0x5c, 0xb4, 0x0b, 0xc1, 0x07, 0x70, 0xaf, 0x48, 0x11, 0x17, 0x6e, 0xe4, 0x9a, 0x5c, 0x71, 0x30,
	0x93, 0x0c, 0x93, 0x2b, 0x34, 0x6f, 0xe1, 0x63, 0xb9, 0xec, 0xd2, 0xa5, 0x24, 0xaf, 0xe0, 0x03,
	0x88, 0x93, 0xda, 0x64, 0xf9, 0x9d, 0x7b, 0xee, 0xb7, 0x38, 0x70, 0x5e, 0xbd, 0x9a, 0x3c, 0x4f,
	0x5f, 0xd0, 0x14, 0x6b, 0x2c, 0x30, 0xaf, 0xd9, 0xa4, 0xd5, 0xda, 0xe5, 0xc8, 0xcf, 0xa5, 0xb7,
	0x8f, 0x96, 0xd8, 0x9b, 0x74, 0xe5, 0x7c, 0xc9, 0xa5, 0x9c, 0xf7, 0xdd, 0xd5, 0xa1, 0x7b, 0xf6,
	0x2d, 0xe0, 0xf8, 0x76, 0xdf, 0xbf, 0x0e, 0x75, 0x39, 0x87, 0xb1, 0x29, 0x32, 0xda, 0x2a, 0x91,
	0x88, 0xe5, 0x6c, 0xd3, 0x81, 0xd4, 0x00, 0x9d, 0xee, 0x06, 0x2d, 0xa9, 0x7f, 0xe1, 0x34, 0x48,
	0x64, 0x02, 0x47, 0x1d, 0xdd, 0x63, 0xfe, 0x46, 0xea, 0x7f, 0x22, 0x96, 0xa3, 0xcd, 0x30, 0xea,
	0x0d, 0x77, 0xb5, 0x23, 0x35, 0x1a, 0x1a, 0x7e, 0x13, 0x79, 0x02, 0xb1, 0x23, 0x6f, 0xca, 0x4c,
	0x8d, 0xc3, 0x6d, 0x4f, 0x72, 0x01, 0x33, 0x36, 0x96, 0x2a, 0x46, 0xeb, 0x54, 0x1c, 0xbc, 0x7d,
	0x20, 0x4f, 0x61, 0x6a, 0x89, 0x31, 0x43, 0x46, 0x35, 0x09, 0x7f, 0x07, 0x96, 0x0a, 0x26, 0xa9,
	0x27, 0xe4, 0xd2, 0xab, 0x69, 0x38, 0xfd, 0xe1, 0xd5, 0xe5, 0x47, 0xa3, 0xc5, 0xae, 0xd1, 0xe2,
	0xab, 0xd1, 0xe2, 0xbd, 0xd5, 0xd1, 0xae, 0xd5, 0xd1, 0x67, 0xab, 0xa3, 0x87, 0xc5, 0x60, 0xd2,
	0xed, 0x60, 0x54, 0xae, 0x1d, 0x55, 0x4f, 0x71, 0xd8, 0xf2, 0xe2, 0x27, 0x00, 0x00, 0xff, 0xff,
	0x12, 0xb5, 0x67, 0x81, 0x79, 0x01, 0x00, 0x00,
}

func (m *PlatformMetric) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PlatformMetric) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PlatformMetric) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintPlatformMetric(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.Metadata) > 0 {
		i -= len(m.Metadata)
		copy(dAtA[i:], m.Metadata)
		i = encodeVarintPlatformMetric(dAtA, i, uint64(len(m.Metadata)))
		i--
		dAtA[i] = 0x3a
	}
	if m.Timestamp != 0 {
		i = encodeVarintPlatformMetric(dAtA, i, uint64(m.Timestamp))
		i--
		dAtA[i] = 0x30
	}
	if len(m.Period) > 0 {
		i -= len(m.Period)
		copy(dAtA[i:], m.Period)
		i = encodeVarintPlatformMetric(dAtA, i, uint64(len(m.Period)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.MetricType) > 0 {
		i -= len(m.MetricType)
		copy(dAtA[i:], m.MetricType)
		i = encodeVarintPlatformMetric(dAtA, i, uint64(len(m.MetricType)))
		i--
		dAtA[i] = 0x22
	}
	if m.MetricValue != 0 {
		i = encodeVarintPlatformMetric(dAtA, i, uint64(m.MetricValue))
		i--
		dAtA[i] = 0x18
	}
	if len(m.MetricName) > 0 {
		i -= len(m.MetricName)
		copy(dAtA[i:], m.MetricName)
		i = encodeVarintPlatformMetric(dAtA, i, uint64(len(m.MetricName)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintPlatformMetric(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintPlatformMetric(dAtA []byte, offset int, v uint64) int {
	offset -= sovPlatformMetric(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *PlatformMetric) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovPlatformMetric(uint64(l))
	}
	l = len(m.MetricName)
	if l > 0 {
		n += 1 + l + sovPlatformMetric(uint64(l))
	}
	if m.MetricValue != 0 {
		n += 1 + sovPlatformMetric(uint64(m.MetricValue))
	}
	l = len(m.MetricType)
	if l > 0 {
		n += 1 + l + sovPlatformMetric(uint64(l))
	}
	l = len(m.Period)
	if l > 0 {
		n += 1 + l + sovPlatformMetric(uint64(l))
	}
	if m.Timestamp != 0 {
		n += 1 + sovPlatformMetric(uint64(m.Timestamp))
	}
	l = len(m.Metadata)
	if l > 0 {
		n += 1 + l + sovPlatformMetric(uint64(l))
	}
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovPlatformMetric(uint64(l))
	}
	return n
}

func sovPlatformMetric(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozPlatformMetric(x uint64) (n int) {
	return sovPlatformMetric(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *PlatformMetric) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPlatformMetric
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PlatformMetric: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PlatformMetric: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPlatformMetric
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPlatformMetric
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPlatformMetric
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MetricName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPlatformMetric
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPlatformMetric
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPlatformMetric
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MetricName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MetricValue", wireType)
			}
			m.MetricValue = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPlatformMetric
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MetricValue |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MetricType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPlatformMetric
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPlatformMetric
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPlatformMetric
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MetricType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Period", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPlatformMetric
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPlatformMetric
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPlatformMetric
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Period = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Timestamp", wireType)
			}
			m.Timestamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPlatformMetric
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Timestamp |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Metadata", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPlatformMetric
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPlatformMetric
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPlatformMetric
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Metadata = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPlatformMetric
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPlatformMetric
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPlatformMetric
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPlatformMetric(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPlatformMetric
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipPlatformMetric(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowPlatformMetric
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPlatformMetric
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPlatformMetric
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthPlatformMetric
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupPlatformMetric
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthPlatformMetric
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthPlatformMetric        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowPlatformMetric          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupPlatformMetric = fmt.Errorf("proto: unexpected end of group")
)
