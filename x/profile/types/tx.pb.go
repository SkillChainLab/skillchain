// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: skillchain/profile/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	_ "github.com/cosmos/cosmos-sdk/types/msgservice"
	_ "github.com/cosmos/cosmos-sdk/types/tx/amino"
	_ "github.com/cosmos/gogoproto/gogoproto"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// MsgUpdateParams is the Msg/UpdateParams request type.
type MsgUpdateParams struct {
	// authority is the address that controls the module (defaults to x/gov unless overwritten).
	Authority string `protobuf:"bytes,1,opt,name=authority,proto3" json:"authority,omitempty"`
	// NOTE: All parameters must be supplied.
	Params Params `protobuf:"bytes,2,opt,name=params,proto3" json:"params"`
}

func (m *MsgUpdateParams) Reset()         { *m = MsgUpdateParams{} }
func (m *MsgUpdateParams) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateParams) ProtoMessage()    {}
func (*MsgUpdateParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_7445e0494a312d6e, []int{0}
}
func (m *MsgUpdateParams) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateParams.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateParams.Merge(m, src)
}
func (m *MsgUpdateParams) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateParams) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateParams.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateParams proto.InternalMessageInfo

func (m *MsgUpdateParams) GetAuthority() string {
	if m != nil {
		return m.Authority
	}
	return ""
}

func (m *MsgUpdateParams) GetParams() Params {
	if m != nil {
		return m.Params
	}
	return Params{}
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
type MsgUpdateParamsResponse struct {
}

func (m *MsgUpdateParamsResponse) Reset()         { *m = MsgUpdateParamsResponse{} }
func (m *MsgUpdateParamsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateParamsResponse) ProtoMessage()    {}
func (*MsgUpdateParamsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7445e0494a312d6e, []int{1}
}
func (m *MsgUpdateParamsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateParamsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateParamsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateParamsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateParamsResponse.Merge(m, src)
}
func (m *MsgUpdateParamsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateParamsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateParamsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateParamsResponse proto.InternalMessageInfo

type MsgCreateProfile struct {
	Creator     string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	DisplayName string `protobuf:"bytes,2,opt,name=displayName,proto3" json:"displayName,omitempty"`
	Bio         string `protobuf:"bytes,3,opt,name=bio,proto3" json:"bio,omitempty"`
	Location    string `protobuf:"bytes,4,opt,name=location,proto3" json:"location,omitempty"`
	Website     string `protobuf:"bytes,5,opt,name=website,proto3" json:"website,omitempty"`
	Github      string `protobuf:"bytes,6,opt,name=github,proto3" json:"github,omitempty"`
	Linkedin    string `protobuf:"bytes,7,opt,name=linkedin,proto3" json:"linkedin,omitempty"`
	Twitter     string `protobuf:"bytes,8,opt,name=twitter,proto3" json:"twitter,omitempty"`
	Avatar      string `protobuf:"bytes,9,opt,name=avatar,proto3" json:"avatar,omitempty"`
}

func (m *MsgCreateProfile) Reset()         { *m = MsgCreateProfile{} }
func (m *MsgCreateProfile) String() string { return proto.CompactTextString(m) }
func (*MsgCreateProfile) ProtoMessage()    {}
func (*MsgCreateProfile) Descriptor() ([]byte, []int) {
	return fileDescriptor_7445e0494a312d6e, []int{2}
}
func (m *MsgCreateProfile) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateProfile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateProfile.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateProfile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateProfile.Merge(m, src)
}
func (m *MsgCreateProfile) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateProfile) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateProfile.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateProfile proto.InternalMessageInfo

func (m *MsgCreateProfile) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateProfile) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *MsgCreateProfile) GetBio() string {
	if m != nil {
		return m.Bio
	}
	return ""
}

func (m *MsgCreateProfile) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *MsgCreateProfile) GetWebsite() string {
	if m != nil {
		return m.Website
	}
	return ""
}

func (m *MsgCreateProfile) GetGithub() string {
	if m != nil {
		return m.Github
	}
	return ""
}

func (m *MsgCreateProfile) GetLinkedin() string {
	if m != nil {
		return m.Linkedin
	}
	return ""
}

func (m *MsgCreateProfile) GetTwitter() string {
	if m != nil {
		return m.Twitter
	}
	return ""
}

func (m *MsgCreateProfile) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

type MsgCreateProfileResponse struct {
}

func (m *MsgCreateProfileResponse) Reset()         { *m = MsgCreateProfileResponse{} }
func (m *MsgCreateProfileResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateProfileResponse) ProtoMessage()    {}
func (*MsgCreateProfileResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7445e0494a312d6e, []int{3}
}
func (m *MsgCreateProfileResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateProfileResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateProfileResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateProfileResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateProfileResponse.Merge(m, src)
}
func (m *MsgCreateProfileResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateProfileResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateProfileResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateProfileResponse proto.InternalMessageInfo

type MsgCreateUserProfile struct {
	Creator         string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Index           string `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
	Owner           string `protobuf:"bytes,3,opt,name=owner,proto3" json:"owner,omitempty"`
	DisplayName     string `protobuf:"bytes,4,opt,name=displayName,proto3" json:"displayName,omitempty"`
	Bio             string `protobuf:"bytes,5,opt,name=bio,proto3" json:"bio,omitempty"`
	Location        string `protobuf:"bytes,6,opt,name=location,proto3" json:"location,omitempty"`
	Website         string `protobuf:"bytes,7,opt,name=website,proto3" json:"website,omitempty"`
	Github          string `protobuf:"bytes,8,opt,name=github,proto3" json:"github,omitempty"`
	Linkedin        string `protobuf:"bytes,9,opt,name=linkedin,proto3" json:"linkedin,omitempty"`
	Twitter         string `protobuf:"bytes,10,opt,name=twitter,proto3" json:"twitter,omitempty"`
	Avatar          string `protobuf:"bytes,11,opt,name=avatar,proto3" json:"avatar,omitempty"`
	ReputationScore uint64 `protobuf:"varint,12,opt,name=reputationScore,proto3" json:"reputationScore,omitempty"`
	CreatedAt       uint64 `protobuf:"varint,13,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt       uint64 `protobuf:"varint,14,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (m *MsgCreateUserProfile) Reset()         { *m = MsgCreateUserProfile{} }
func (m *MsgCreateUserProfile) String() string { return proto.CompactTextString(m) }
func (*MsgCreateUserProfile) ProtoMessage()    {}
func (*MsgCreateUserProfile) Descriptor() ([]byte, []int) {
	return fileDescriptor_7445e0494a312d6e, []int{4}
}
func (m *MsgCreateUserProfile) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateUserProfile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateUserProfile.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateUserProfile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateUserProfile.Merge(m, src)
}
func (m *MsgCreateUserProfile) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateUserProfile) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateUserProfile.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateUserProfile proto.InternalMessageInfo

func (m *MsgCreateUserProfile) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateUserProfile) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

func (m *MsgCreateUserProfile) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *MsgCreateUserProfile) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *MsgCreateUserProfile) GetBio() string {
	if m != nil {
		return m.Bio
	}
	return ""
}

func (m *MsgCreateUserProfile) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *MsgCreateUserProfile) GetWebsite() string {
	if m != nil {
		return m.Website
	}
	return ""
}

func (m *MsgCreateUserProfile) GetGithub() string {
	if m != nil {
		return m.Github
	}
	return ""
}

func (m *MsgCreateUserProfile) GetLinkedin() string {
	if m != nil {
		return m.Linkedin
	}
	return ""
}

func (m *MsgCreateUserProfile) GetTwitter() string {
	if m != nil {
		return m.Twitter
	}
	return ""
}

func (m *MsgCreateUserProfile) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

func (m *MsgCreateUserProfile) GetReputationScore() uint64 {
	if m != nil {
		return m.ReputationScore
	}
	return 0
}

func (m *MsgCreateUserProfile) GetCreatedAt() uint64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *MsgCreateUserProfile) GetUpdatedAt() uint64 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

type MsgCreateUserProfileResponse struct {
}

func (m *MsgCreateUserProfileResponse) Reset()         { *m = MsgCreateUserProfileResponse{} }
func (m *MsgCreateUserProfileResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateUserProfileResponse) ProtoMessage()    {}
func (*MsgCreateUserProfileResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7445e0494a312d6e, []int{5}
}
func (m *MsgCreateUserProfileResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateUserProfileResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateUserProfileResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateUserProfileResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateUserProfileResponse.Merge(m, src)
}
func (m *MsgCreateUserProfileResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateUserProfileResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateUserProfileResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateUserProfileResponse proto.InternalMessageInfo

type MsgUpdateUserProfile struct {
	Creator         string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Index           string `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
	Owner           string `protobuf:"bytes,3,opt,name=owner,proto3" json:"owner,omitempty"`
	DisplayName     string `protobuf:"bytes,4,opt,name=displayName,proto3" json:"displayName,omitempty"`
	Bio             string `protobuf:"bytes,5,opt,name=bio,proto3" json:"bio,omitempty"`
	Location        string `protobuf:"bytes,6,opt,name=location,proto3" json:"location,omitempty"`
	Website         string `protobuf:"bytes,7,opt,name=website,proto3" json:"website,omitempty"`
	Github          string `protobuf:"bytes,8,opt,name=github,proto3" json:"github,omitempty"`
	Linkedin        string `protobuf:"bytes,9,opt,name=linkedin,proto3" json:"linkedin,omitempty"`
	Twitter         string `protobuf:"bytes,10,opt,name=twitter,proto3" json:"twitter,omitempty"`
	Avatar          string `protobuf:"bytes,11,opt,name=avatar,proto3" json:"avatar,omitempty"`
	ReputationScore uint64 `protobuf:"varint,12,opt,name=reputationScore,proto3" json:"reputationScore,omitempty"`
	CreatedAt       uint64 `protobuf:"varint,13,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt       uint64 `protobuf:"varint,14,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (m *MsgUpdateUserProfile) Reset()         { *m = MsgUpdateUserProfile{} }
func (m *MsgUpdateUserProfile) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateUserProfile) ProtoMessage()    {}
func (*MsgUpdateUserProfile) Descriptor() ([]byte, []int) {
	return fileDescriptor_7445e0494a312d6e, []int{6}
}
func (m *MsgUpdateUserProfile) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateUserProfile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateUserProfile.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateUserProfile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateUserProfile.Merge(m, src)
}
func (m *MsgUpdateUserProfile) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateUserProfile) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateUserProfile.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateUserProfile proto.InternalMessageInfo

func (m *MsgUpdateUserProfile) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateUserProfile) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

func (m *MsgUpdateUserProfile) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *MsgUpdateUserProfile) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *MsgUpdateUserProfile) GetBio() string {
	if m != nil {
		return m.Bio
	}
	return ""
}

func (m *MsgUpdateUserProfile) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *MsgUpdateUserProfile) GetWebsite() string {
	if m != nil {
		return m.Website
	}
	return ""
}

func (m *MsgUpdateUserProfile) GetGithub() string {
	if m != nil {
		return m.Github
	}
	return ""
}

func (m *MsgUpdateUserProfile) GetLinkedin() string {
	if m != nil {
		return m.Linkedin
	}
	return ""
}

func (m *MsgUpdateUserProfile) GetTwitter() string {
	if m != nil {
		return m.Twitter
	}
	return ""
}

func (m *MsgUpdateUserProfile) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

func (m *MsgUpdateUserProfile) GetReputationScore() uint64 {
	if m != nil {
		return m.ReputationScore
	}
	return 0
}

func (m *MsgUpdateUserProfile) GetCreatedAt() uint64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *MsgUpdateUserProfile) GetUpdatedAt() uint64 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

type MsgUpdateUserProfileResponse struct {
}

func (m *MsgUpdateUserProfileResponse) Reset()         { *m = MsgUpdateUserProfileResponse{} }
func (m *MsgUpdateUserProfileResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateUserProfileResponse) ProtoMessage()    {}
func (*MsgUpdateUserProfileResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7445e0494a312d6e, []int{7}
}
func (m *MsgUpdateUserProfileResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateUserProfileResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateUserProfileResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateUserProfileResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateUserProfileResponse.Merge(m, src)
}
func (m *MsgUpdateUserProfileResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateUserProfileResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateUserProfileResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateUserProfileResponse proto.InternalMessageInfo

type MsgDeleteUserProfile struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Index   string `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
}

func (m *MsgDeleteUserProfile) Reset()         { *m = MsgDeleteUserProfile{} }
func (m *MsgDeleteUserProfile) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteUserProfile) ProtoMessage()    {}
func (*MsgDeleteUserProfile) Descriptor() ([]byte, []int) {
	return fileDescriptor_7445e0494a312d6e, []int{8}
}
func (m *MsgDeleteUserProfile) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteUserProfile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteUserProfile.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteUserProfile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteUserProfile.Merge(m, src)
}
func (m *MsgDeleteUserProfile) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteUserProfile) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteUserProfile.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteUserProfile proto.InternalMessageInfo

func (m *MsgDeleteUserProfile) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteUserProfile) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

type MsgDeleteUserProfileResponse struct {
}

func (m *MsgDeleteUserProfileResponse) Reset()         { *m = MsgDeleteUserProfileResponse{} }
func (m *MsgDeleteUserProfileResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteUserProfileResponse) ProtoMessage()    {}
func (*MsgDeleteUserProfileResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7445e0494a312d6e, []int{9}
}
func (m *MsgDeleteUserProfileResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteUserProfileResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteUserProfileResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteUserProfileResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteUserProfileResponse.Merge(m, src)
}
func (m *MsgDeleteUserProfileResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteUserProfileResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteUserProfileResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteUserProfileResponse proto.InternalMessageInfo

type MsgCreateUserSkill struct {
	Creator          string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Index            string `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
	Owner            string `protobuf:"bytes,3,opt,name=owner,proto3" json:"owner,omitempty"`
	SkillName        string `protobuf:"bytes,4,opt,name=skillName,proto3" json:"skillName,omitempty"`
	ProficiencyLevel string `protobuf:"bytes,5,opt,name=proficiencyLevel,proto3" json:"proficiencyLevel,omitempty"`
	YearsExperience  uint64 `protobuf:"varint,6,opt,name=yearsExperience,proto3" json:"yearsExperience,omitempty"`
	Verified         bool   `protobuf:"varint,7,opt,name=verified,proto3" json:"verified,omitempty"`
	VerifiedBy       string `protobuf:"bytes,8,opt,name=verifiedBy,proto3" json:"verifiedBy,omitempty"`
	VerificationDate uint64 `protobuf:"varint,9,opt,name=verificationDate,proto3" json:"verificationDate,omitempty"`
	EndorsementCount uint64 `protobuf:"varint,10,opt,name=endorsementCount,proto3" json:"endorsementCount,omitempty"`
}

func (m *MsgCreateUserSkill) Reset()         { *m = MsgCreateUserSkill{} }
func (m *MsgCreateUserSkill) String() string { return proto.CompactTextString(m) }
func (*MsgCreateUserSkill) ProtoMessage()    {}
func (*MsgCreateUserSkill) Descriptor() ([]byte, []int) {
	return fileDescriptor_7445e0494a312d6e, []int{10}
}
func (m *MsgCreateUserSkill) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateUserSkill) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateUserSkill.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateUserSkill) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateUserSkill.Merge(m, src)
}
func (m *MsgCreateUserSkill) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateUserSkill) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateUserSkill.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateUserSkill proto.InternalMessageInfo

func (m *MsgCreateUserSkill) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateUserSkill) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

func (m *MsgCreateUserSkill) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *MsgCreateUserSkill) GetSkillName() string {
	if m != nil {
		return m.SkillName
	}
	return ""
}

func (m *MsgCreateUserSkill) GetProficiencyLevel() string {
	if m != nil {
		return m.ProficiencyLevel
	}
	return ""
}

func (m *MsgCreateUserSkill) GetYearsExperience() uint64 {
	if m != nil {
		return m.YearsExperience
	}
	return 0
}

func (m *MsgCreateUserSkill) GetVerified() bool {
	if m != nil {
		return m.Verified
	}
	return false
}

func (m *MsgCreateUserSkill) GetVerifiedBy() string {
	if m != nil {
		return m.VerifiedBy
	}
	return ""
}

func (m *MsgCreateUserSkill) GetVerificationDate() uint64 {
	if m != nil {
		return m.VerificationDate
	}
	return 0
}

func (m *MsgCreateUserSkill) GetEndorsementCount() uint64 {
	if m != nil {
		return m.EndorsementCount
	}
	return 0
}

type MsgCreateUserSkillResponse struct {
}

func (m *MsgCreateUserSkillResponse) Reset()         { *m = MsgCreateUserSkillResponse{} }
func (m *MsgCreateUserSkillResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateUserSkillResponse) ProtoMessage()    {}
func (*MsgCreateUserSkillResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7445e0494a312d6e, []int{11}
}
func (m *MsgCreateUserSkillResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateUserSkillResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateUserSkillResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateUserSkillResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateUserSkillResponse.Merge(m, src)
}
func (m *MsgCreateUserSkillResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateUserSkillResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateUserSkillResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateUserSkillResponse proto.InternalMessageInfo

type MsgUpdateUserSkill struct {
	Creator          string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Index            string `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
	Owner            string `protobuf:"bytes,3,opt,name=owner,proto3" json:"owner,omitempty"`
	SkillName        string `protobuf:"bytes,4,opt,name=skillName,proto3" json:"skillName,omitempty"`
	ProficiencyLevel string `protobuf:"bytes,5,opt,name=proficiencyLevel,proto3" json:"proficiencyLevel,omitempty"`
	YearsExperience  uint64 `protobuf:"varint,6,opt,name=yearsExperience,proto3" json:"yearsExperience,omitempty"`
	Verified         bool   `protobuf:"varint,7,opt,name=verified,proto3" json:"verified,omitempty"`
	VerifiedBy       string `protobuf:"bytes,8,opt,name=verifiedBy,proto3" json:"verifiedBy,omitempty"`
	VerificationDate uint64 `protobuf:"varint,9,opt,name=verificationDate,proto3" json:"verificationDate,omitempty"`
	EndorsementCount uint64 `protobuf:"varint,10,opt,name=endorsementCount,proto3" json:"endorsementCount,omitempty"`
}

func (m *MsgUpdateUserSkill) Reset()         { *m = MsgUpdateUserSkill{} }
func (m *MsgUpdateUserSkill) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateUserSkill) ProtoMessage()    {}
func (*MsgUpdateUserSkill) Descriptor() ([]byte, []int) {
	return fileDescriptor_7445e0494a312d6e, []int{12}
}
func (m *MsgUpdateUserSkill) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateUserSkill) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateUserSkill.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateUserSkill) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateUserSkill.Merge(m, src)
}
func (m *MsgUpdateUserSkill) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateUserSkill) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateUserSkill.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateUserSkill proto.InternalMessageInfo

func (m *MsgUpdateUserSkill) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateUserSkill) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

func (m *MsgUpdateUserSkill) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *MsgUpdateUserSkill) GetSkillName() string {
	if m != nil {
		return m.SkillName
	}
	return ""
}

func (m *MsgUpdateUserSkill) GetProficiencyLevel() string {
	if m != nil {
		return m.ProficiencyLevel
	}
	return ""
}

func (m *MsgUpdateUserSkill) GetYearsExperience() uint64 {
	if m != nil {
		return m.YearsExperience
	}
	return 0
}

func (m *MsgUpdateUserSkill) GetVerified() bool {
	if m != nil {
		return m.Verified
	}
	return false
}

func (m *MsgUpdateUserSkill) GetVerifiedBy() string {
	if m != nil {
		return m.VerifiedBy
	}
	return ""
}

func (m *MsgUpdateUserSkill) GetVerificationDate() uint64 {
	if m != nil {
		return m.VerificationDate
	}
	return 0
}

func (m *MsgUpdateUserSkill) GetEndorsementCount() uint64 {
	if m != nil {
		return m.EndorsementCount
	}
	return 0
}

type MsgUpdateUserSkillResponse struct {
}

func (m *MsgUpdateUserSkillResponse) Reset()         { *m = MsgUpdateUserSkillResponse{} }
func (m *MsgUpdateUserSkillResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateUserSkillResponse) ProtoMessage()    {}
func (*MsgUpdateUserSkillResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7445e0494a312d6e, []int{13}
}
func (m *MsgUpdateUserSkillResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateUserSkillResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateUserSkillResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateUserSkillResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateUserSkillResponse.Merge(m, src)
}
func (m *MsgUpdateUserSkillResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateUserSkillResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateUserSkillResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateUserSkillResponse proto.InternalMessageInfo

type MsgDeleteUserSkill struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Index   string `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
}

func (m *MsgDeleteUserSkill) Reset()         { *m = MsgDeleteUserSkill{} }
func (m *MsgDeleteUserSkill) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteUserSkill) ProtoMessage()    {}
func (*MsgDeleteUserSkill) Descriptor() ([]byte, []int) {
	return fileDescriptor_7445e0494a312d6e, []int{14}
}
func (m *MsgDeleteUserSkill) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteUserSkill) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteUserSkill.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteUserSkill) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteUserSkill.Merge(m, src)
}
func (m *MsgDeleteUserSkill) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteUserSkill) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteUserSkill.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteUserSkill proto.InternalMessageInfo

func (m *MsgDeleteUserSkill) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteUserSkill) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

type MsgDeleteUserSkillResponse struct {
}

func (m *MsgDeleteUserSkillResponse) Reset()         { *m = MsgDeleteUserSkillResponse{} }
func (m *MsgDeleteUserSkillResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteUserSkillResponse) ProtoMessage()    {}
func (*MsgDeleteUserSkillResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7445e0494a312d6e, []int{15}
}
func (m *MsgDeleteUserSkillResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteUserSkillResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteUserSkillResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteUserSkillResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteUserSkillResponse.Merge(m, src)
}
func (m *MsgDeleteUserSkillResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteUserSkillResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteUserSkillResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteUserSkillResponse proto.InternalMessageInfo

type MsgEndorseSkill struct {
	Creator         string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	TargetUser      string `protobuf:"bytes,2,opt,name=targetUser,proto3" json:"targetUser,omitempty"`
	SkillName       string `protobuf:"bytes,3,opt,name=skillName,proto3" json:"skillName,omitempty"`
	EndorsementType string `protobuf:"bytes,4,opt,name=endorsementType,proto3" json:"endorsementType,omitempty"`
	Comment         string `protobuf:"bytes,5,opt,name=comment,proto3" json:"comment,omitempty"`
	StakeTokens     uint64 `protobuf:"varint,6,opt,name=stakeTokens,proto3" json:"stakeTokens,omitempty"`
}

func (m *MsgEndorseSkill) Reset()         { *m = MsgEndorseSkill{} }
func (m *MsgEndorseSkill) String() string { return proto.CompactTextString(m) }
func (*MsgEndorseSkill) ProtoMessage()    {}
func (*MsgEndorseSkill) Descriptor() ([]byte, []int) {
	return fileDescriptor_7445e0494a312d6e, []int{16}
}
func (m *MsgEndorseSkill) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgEndorseSkill) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgEndorseSkill.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgEndorseSkill) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgEndorseSkill.Merge(m, src)
}
func (m *MsgEndorseSkill) XXX_Size() int {
	return m.Size()
}
func (m *MsgEndorseSkill) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgEndorseSkill.DiscardUnknown(m)
}

var xxx_messageInfo_MsgEndorseSkill proto.InternalMessageInfo

func (m *MsgEndorseSkill) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgEndorseSkill) GetTargetUser() string {
	if m != nil {
		return m.TargetUser
	}
	return ""
}

func (m *MsgEndorseSkill) GetSkillName() string {
	if m != nil {
		return m.SkillName
	}
	return ""
}

func (m *MsgEndorseSkill) GetEndorsementType() string {
	if m != nil {
		return m.EndorsementType
	}
	return ""
}

func (m *MsgEndorseSkill) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

func (m *MsgEndorseSkill) GetStakeTokens() uint64 {
	if m != nil {
		return m.StakeTokens
	}
	return 0
}

type MsgEndorseSkillResponse struct {
}

func (m *MsgEndorseSkillResponse) Reset()         { *m = MsgEndorseSkillResponse{} }
func (m *MsgEndorseSkillResponse) String() string { return proto.CompactTextString(m) }
func (*MsgEndorseSkillResponse) ProtoMessage()    {}
func (*MsgEndorseSkillResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7445e0494a312d6e, []int{17}
}
func (m *MsgEndorseSkillResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgEndorseSkillResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgEndorseSkillResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgEndorseSkillResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgEndorseSkillResponse.Merge(m, src)
}
func (m *MsgEndorseSkillResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgEndorseSkillResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgEndorseSkillResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgEndorseSkillResponse proto.InternalMessageInfo

type MsgCreateSkillEndorsement struct {
	Creator           string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Index             string `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
	Endorser          string `protobuf:"bytes,3,opt,name=endorser,proto3" json:"endorser,omitempty"`
	TargetUser        string `protobuf:"bytes,4,opt,name=targetUser,proto3" json:"targetUser,omitempty"`
	SkillName         string `protobuf:"bytes,5,opt,name=skillName,proto3" json:"skillName,omitempty"`
	EndorsementType   string `protobuf:"bytes,6,opt,name=endorsementType,proto3" json:"endorsementType,omitempty"`
	Comment           string `protobuf:"bytes,7,opt,name=comment,proto3" json:"comment,omitempty"`
	CreatedAt         uint64 `protobuf:"varint,8,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	SkillTokensStaked uint64 `protobuf:"varint,9,opt,name=skillTokensStaked,proto3" json:"skillTokensStaked,omitempty"`
}

func (m *MsgCreateSkillEndorsement) Reset()         { *m = MsgCreateSkillEndorsement{} }
func (m *MsgCreateSkillEndorsement) String() string { return proto.CompactTextString(m) }
func (*MsgCreateSkillEndorsement) ProtoMessage()    {}
func (*MsgCreateSkillEndorsement) Descriptor() ([]byte, []int) {
	return fileDescriptor_7445e0494a312d6e, []int{18}
}
func (m *MsgCreateSkillEndorsement) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateSkillEndorsement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateSkillEndorsement.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateSkillEndorsement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateSkillEndorsement.Merge(m, src)
}
func (m *MsgCreateSkillEndorsement) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateSkillEndorsement) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateSkillEndorsement.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateSkillEndorsement proto.InternalMessageInfo

func (m *MsgCreateSkillEndorsement) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateSkillEndorsement) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

func (m *MsgCreateSkillEndorsement) GetEndorser() string {
	if m != nil {
		return m.Endorser
	}
	return ""
}

func (m *MsgCreateSkillEndorsement) GetTargetUser() string {
	if m != nil {
		return m.TargetUser
	}
	return ""
}

func (m *MsgCreateSkillEndorsement) GetSkillName() string {
	if m != nil {
		return m.SkillName
	}
	return ""
}

func (m *MsgCreateSkillEndorsement) GetEndorsementType() string {
	if m != nil {
		return m.EndorsementType
	}
	return ""
}

func (m *MsgCreateSkillEndorsement) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

func (m *MsgCreateSkillEndorsement) GetCreatedAt() uint64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *MsgCreateSkillEndorsement) GetSkillTokensStaked() uint64 {
	if m != nil {
		return m.SkillTokensStaked
	}
	return 0
}

type MsgCreateSkillEndorsementResponse struct {
}

func (m *MsgCreateSkillEndorsementResponse) Reset()         { *m = MsgCreateSkillEndorsementResponse{} }
func (m *MsgCreateSkillEndorsementResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateSkillEndorsementResponse) ProtoMessage()    {}
func (*MsgCreateSkillEndorsementResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7445e0494a312d6e, []int{19}
}
func (m *MsgCreateSkillEndorsementResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateSkillEndorsementResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateSkillEndorsementResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateSkillEndorsementResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateSkillEndorsementResponse.Merge(m, src)
}
func (m *MsgCreateSkillEndorsementResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateSkillEndorsementResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateSkillEndorsementResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateSkillEndorsementResponse proto.InternalMessageInfo

type MsgUpdateSkillEndorsement struct {
	Creator           string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Index             string `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
	Endorser          string `protobuf:"bytes,3,opt,name=endorser,proto3" json:"endorser,omitempty"`
	TargetUser        string `protobuf:"bytes,4,opt,name=targetUser,proto3" json:"targetUser,omitempty"`
	SkillName         string `protobuf:"bytes,5,opt,name=skillName,proto3" json:"skillName,omitempty"`
	EndorsementType   string `protobuf:"bytes,6,opt,name=endorsementType,proto3" json:"endorsementType,omitempty"`
	Comment           string `protobuf:"bytes,7,opt,name=comment,proto3" json:"comment,omitempty"`
	CreatedAt         uint64 `protobuf:"varint,8,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	SkillTokensStaked uint64 `protobuf:"varint,9,opt,name=skillTokensStaked,proto3" json:"skillTokensStaked,omitempty"`
}

func (m *MsgUpdateSkillEndorsement) Reset()         { *m = MsgUpdateSkillEndorsement{} }
func (m *MsgUpdateSkillEndorsement) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateSkillEndorsement) ProtoMessage()    {}
func (*MsgUpdateSkillEndorsement) Descriptor() ([]byte, []int) {
	return fileDescriptor_7445e0494a312d6e, []int{20}
}
func (m *MsgUpdateSkillEndorsement) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateSkillEndorsement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateSkillEndorsement.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateSkillEndorsement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateSkillEndorsement.Merge(m, src)
}
func (m *MsgUpdateSkillEndorsement) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateSkillEndorsement) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateSkillEndorsement.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateSkillEndorsement proto.InternalMessageInfo

func (m *MsgUpdateSkillEndorsement) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateSkillEndorsement) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

func (m *MsgUpdateSkillEndorsement) GetEndorser() string {
	if m != nil {
		return m.Endorser
	}
	return ""
}

func (m *MsgUpdateSkillEndorsement) GetTargetUser() string {
	if m != nil {
		return m.TargetUser
	}
	return ""
}

func (m *MsgUpdateSkillEndorsement) GetSkillName() string {
	if m != nil {
		return m.SkillName
	}
	return ""
}

func (m *MsgUpdateSkillEndorsement) GetEndorsementType() string {
	if m != nil {
		return m.EndorsementType
	}
	return ""
}

func (m *MsgUpdateSkillEndorsement) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

func (m *MsgUpdateSkillEndorsement) GetCreatedAt() uint64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *MsgUpdateSkillEndorsement) GetSkillTokensStaked() uint64 {
	if m != nil {
		return m.SkillTokensStaked
	}
	return 0
}

type MsgUpdateSkillEndorsementResponse struct {
}

func (m *MsgUpdateSkillEndorsementResponse) Reset()         { *m = MsgUpdateSkillEndorsementResponse{} }
func (m *MsgUpdateSkillEndorsementResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateSkillEndorsementResponse) ProtoMessage()    {}
func (*MsgUpdateSkillEndorsementResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7445e0494a312d6e, []int{21}
}
func (m *MsgUpdateSkillEndorsementResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateSkillEndorsementResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateSkillEndorsementResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateSkillEndorsementResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateSkillEndorsementResponse.Merge(m, src)
}
func (m *MsgUpdateSkillEndorsementResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateSkillEndorsementResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateSkillEndorsementResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateSkillEndorsementResponse proto.InternalMessageInfo

type MsgDeleteSkillEndorsement struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Index   string `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
}

func (m *MsgDeleteSkillEndorsement) Reset()         { *m = MsgDeleteSkillEndorsement{} }
func (m *MsgDeleteSkillEndorsement) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteSkillEndorsement) ProtoMessage()    {}
func (*MsgDeleteSkillEndorsement) Descriptor() ([]byte, []int) {
	return fileDescriptor_7445e0494a312d6e, []int{22}
}
func (m *MsgDeleteSkillEndorsement) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteSkillEndorsement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteSkillEndorsement.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteSkillEndorsement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteSkillEndorsement.Merge(m, src)
}
func (m *MsgDeleteSkillEndorsement) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteSkillEndorsement) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteSkillEndorsement.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteSkillEndorsement proto.InternalMessageInfo

func (m *MsgDeleteSkillEndorsement) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteSkillEndorsement) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

type MsgDeleteSkillEndorsementResponse struct {
}

func (m *MsgDeleteSkillEndorsementResponse) Reset()         { *m = MsgDeleteSkillEndorsementResponse{} }
func (m *MsgDeleteSkillEndorsementResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteSkillEndorsementResponse) ProtoMessage()    {}
func (*MsgDeleteSkillEndorsementResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7445e0494a312d6e, []int{23}
}
func (m *MsgDeleteSkillEndorsementResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteSkillEndorsementResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteSkillEndorsementResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteSkillEndorsementResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteSkillEndorsementResponse.Merge(m, src)
}
func (m *MsgDeleteSkillEndorsementResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteSkillEndorsementResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteSkillEndorsementResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteSkillEndorsementResponse proto.InternalMessageInfo

type MsgDisputeEndorsement struct {
	Creator       string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	EndorsementId string `protobuf:"bytes,2,opt,name=endorsementId,proto3" json:"endorsementId,omitempty"`
	DisputeReason string `protobuf:"bytes,3,opt,name=disputeReason,proto3" json:"disputeReason,omitempty"`
	Evidence      string `protobuf:"bytes,4,opt,name=evidence,proto3" json:"evidence,omitempty"`
}

func (m *MsgDisputeEndorsement) Reset()         { *m = MsgDisputeEndorsement{} }
func (m *MsgDisputeEndorsement) String() string { return proto.CompactTextString(m) }
func (*MsgDisputeEndorsement) ProtoMessage()    {}
func (*MsgDisputeEndorsement) Descriptor() ([]byte, []int) {
	return fileDescriptor_7445e0494a312d6e, []int{24}
}
func (m *MsgDisputeEndorsement) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDisputeEndorsement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDisputeEndorsement.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDisputeEndorsement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDisputeEndorsement.Merge(m, src)
}
func (m *MsgDisputeEndorsement) XXX_Size() int {
	return m.Size()
}
func (m *MsgDisputeEndorsement) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDisputeEndorsement.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDisputeEndorsement proto.InternalMessageInfo

func (m *MsgDisputeEndorsement) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDisputeEndorsement) GetEndorsementId() string {
	if m != nil {
		return m.EndorsementId
	}
	return ""
}

func (m *MsgDisputeEndorsement) GetDisputeReason() string {
	if m != nil {
		return m.DisputeReason
	}
	return ""
}

func (m *MsgDisputeEndorsement) GetEvidence() string {
	if m != nil {
		return m.Evidence
	}
	return ""
}

type MsgDisputeEndorsementResponse struct {
}

func (m *MsgDisputeEndorsementResponse) Reset()         { *m = MsgDisputeEndorsementResponse{} }
func (m *MsgDisputeEndorsementResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDisputeEndorsementResponse) ProtoMessage()    {}
func (*MsgDisputeEndorsementResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7445e0494a312d6e, []int{25}
}
func (m *MsgDisputeEndorsementResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDisputeEndorsementResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDisputeEndorsementResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDisputeEndorsementResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDisputeEndorsementResponse.Merge(m, src)
}
func (m *MsgDisputeEndorsementResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDisputeEndorsementResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDisputeEndorsementResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDisputeEndorsementResponse proto.InternalMessageInfo

type MsgWithdrawStakedTokens struct {
	Creator   string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	SkillName string `protobuf:"bytes,2,opt,name=skillName,proto3" json:"skillName,omitempty"`
}

func (m *MsgWithdrawStakedTokens) Reset()         { *m = MsgWithdrawStakedTokens{} }
func (m *MsgWithdrawStakedTokens) String() string { return proto.CompactTextString(m) }
func (*MsgWithdrawStakedTokens) ProtoMessage()    {}
func (*MsgWithdrawStakedTokens) Descriptor() ([]byte, []int) {
	return fileDescriptor_7445e0494a312d6e, []int{26}
}
func (m *MsgWithdrawStakedTokens) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgWithdrawStakedTokens) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgWithdrawStakedTokens.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgWithdrawStakedTokens) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgWithdrawStakedTokens.Merge(m, src)
}
func (m *MsgWithdrawStakedTokens) XXX_Size() int {
	return m.Size()
}
func (m *MsgWithdrawStakedTokens) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgWithdrawStakedTokens.DiscardUnknown(m)
}

var xxx_messageInfo_MsgWithdrawStakedTokens proto.InternalMessageInfo

func (m *MsgWithdrawStakedTokens) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgWithdrawStakedTokens) GetSkillName() string {
	if m != nil {
		return m.SkillName
	}
	return ""
}

type MsgWithdrawStakedTokensResponse struct {
}

func (m *MsgWithdrawStakedTokensResponse) Reset()         { *m = MsgWithdrawStakedTokensResponse{} }
func (m *MsgWithdrawStakedTokensResponse) String() string { return proto.CompactTextString(m) }
func (*MsgWithdrawStakedTokensResponse) ProtoMessage()    {}
func (*MsgWithdrawStakedTokensResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7445e0494a312d6e, []int{27}
}
func (m *MsgWithdrawStakedTokensResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgWithdrawStakedTokensResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgWithdrawStakedTokensResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgWithdrawStakedTokensResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgWithdrawStakedTokensResponse.Merge(m, src)
}
func (m *MsgWithdrawStakedTokensResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgWithdrawStakedTokensResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgWithdrawStakedTokensResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgWithdrawStakedTokensResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgUpdateParams)(nil), "skillchain.profile.MsgUpdateParams")
	proto.RegisterType((*MsgUpdateParamsResponse)(nil), "skillchain.profile.MsgUpdateParamsResponse")
	proto.RegisterType((*MsgCreateProfile)(nil), "skillchain.profile.MsgCreateProfile")
	proto.RegisterType((*MsgCreateProfileResponse)(nil), "skillchain.profile.MsgCreateProfileResponse")
	proto.RegisterType((*MsgCreateUserProfile)(nil), "skillchain.profile.MsgCreateUserProfile")
	proto.RegisterType((*MsgCreateUserProfileResponse)(nil), "skillchain.profile.MsgCreateUserProfileResponse")
	proto.RegisterType((*MsgUpdateUserProfile)(nil), "skillchain.profile.MsgUpdateUserProfile")
	proto.RegisterType((*MsgUpdateUserProfileResponse)(nil), "skillchain.profile.MsgUpdateUserProfileResponse")
	proto.RegisterType((*MsgDeleteUserProfile)(nil), "skillchain.profile.MsgDeleteUserProfile")
	proto.RegisterType((*MsgDeleteUserProfileResponse)(nil), "skillchain.profile.MsgDeleteUserProfileResponse")
	proto.RegisterType((*MsgCreateUserSkill)(nil), "skillchain.profile.MsgCreateUserSkill")
	proto.RegisterType((*MsgCreateUserSkillResponse)(nil), "skillchain.profile.MsgCreateUserSkillResponse")
	proto.RegisterType((*MsgUpdateUserSkill)(nil), "skillchain.profile.MsgUpdateUserSkill")
	proto.RegisterType((*MsgUpdateUserSkillResponse)(nil), "skillchain.profile.MsgUpdateUserSkillResponse")
	proto.RegisterType((*MsgDeleteUserSkill)(nil), "skillchain.profile.MsgDeleteUserSkill")
	proto.RegisterType((*MsgDeleteUserSkillResponse)(nil), "skillchain.profile.MsgDeleteUserSkillResponse")
	proto.RegisterType((*MsgEndorseSkill)(nil), "skillchain.profile.MsgEndorseSkill")
	proto.RegisterType((*MsgEndorseSkillResponse)(nil), "skillchain.profile.MsgEndorseSkillResponse")
	proto.RegisterType((*MsgCreateSkillEndorsement)(nil), "skillchain.profile.MsgCreateSkillEndorsement")
	proto.RegisterType((*MsgCreateSkillEndorsementResponse)(nil), "skillchain.profile.MsgCreateSkillEndorsementResponse")
	proto.RegisterType((*MsgUpdateSkillEndorsement)(nil), "skillchain.profile.MsgUpdateSkillEndorsement")
	proto.RegisterType((*MsgUpdateSkillEndorsementResponse)(nil), "skillchain.profile.MsgUpdateSkillEndorsementResponse")
	proto.RegisterType((*MsgDeleteSkillEndorsement)(nil), "skillchain.profile.MsgDeleteSkillEndorsement")
	proto.RegisterType((*MsgDeleteSkillEndorsementResponse)(nil), "skillchain.profile.MsgDeleteSkillEndorsementResponse")
	proto.RegisterType((*MsgDisputeEndorsement)(nil), "skillchain.profile.MsgDisputeEndorsement")
	proto.RegisterType((*MsgDisputeEndorsementResponse)(nil), "skillchain.profile.MsgDisputeEndorsementResponse")
	proto.RegisterType((*MsgWithdrawStakedTokens)(nil), "skillchain.profile.MsgWithdrawStakedTokens")
	proto.RegisterType((*MsgWithdrawStakedTokensResponse)(nil), "skillchain.profile.MsgWithdrawStakedTokensResponse")
}

func init() { proto.RegisterFile("skillchain/profile/tx.proto", fileDescriptor_7445e0494a312d6e) }

var fileDescriptor_7445e0494a312d6e = []byte{
	// 1269 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x58, 0xcd, 0x4f, 0x24, 0x45,
	0x14, 0x67, 0x60, 0x18, 0x66, 0x0a, 0x10, 0xe8, 0xe0, 0x6e, 0xd3, 0xe2, 0xc0, 0x02, 0x92, 0x71,
	0x5c, 0x18, 0x77, 0xd7, 0x8f, 0x64, 0x13, 0x0f, 0xcb, 0x2e, 0x07, 0x13, 0x31, 0xa6, 0x61, 0x63,
	0xf4, 0x82, 0xcd, 0x74, 0xed, 0x50, 0x61, 0xa6, 0x6b, 0x52, 0x55, 0x03, 0xcc, 0xc5, 0x18, 0x8f,
	0x7b, 0xf2, 0x4f, 0xf0, 0xa6, 0x47, 0x0e, 0x26, 0x9e, 0x8d, 0x97, 0x3d, 0x6e, 0x3c, 0x79, 0xd1,
	0x18, 0x38, 0x70, 0xf5, 0x4f, 0x30, 0xf5, 0x31, 0x3d, 0xdd, 0xd5, 0x5d, 0x3d, 0x83, 0x18, 0xb3,
	0x07, 0x2e, 0xd0, 0xef, 0xa3, 0xdf, 0xaf, 0xde, 0xef, 0xbd, 0xea, 0x7a, 0x35, 0xe0, 0x0d, 0x7a,
	0x84, 0x9a, 0xcd, 0xfa, 0xa1, 0x87, 0x82, 0x5a, 0x9b, 0xe0, 0x67, 0xa8, 0x09, 0x6b, 0xec, 0x74,
	0xb3, 0x4d, 0x30, 0xc3, 0x96, 0xd5, 0x37, 0x6e, 0x2a, 0xa3, 0x33, 0xe7, 0xb5, 0x50, 0x80, 0x6b,
	0xe2, 0xaf, 0x74, 0x73, 0x6e, 0xd7, 0x31, 0x6d, 0x61, 0x5a, 0x6b, 0xd1, 0x46, 0xed, 0xf8, 0x1e,
	0xff, 0xa7, 0x0c, 0x0b, 0xd2, 0xb0, 0x2f, 0xa4, 0x9a, 0x14, 0x94, 0x69, 0xbe, 0x81, 0x1b, 0x58,
	0xea, 0xf9, 0x93, 0xd2, 0x2e, 0xa5, 0xac, 0xa6, 0xed, 0x11, 0xaf, 0xd5, 0x7b, 0xed, 0xad, 0x14,
	0x87, 0x0e, 0x85, 0x64, 0x5f, 0x09, 0xca, 0x6d, 0xd5, 0xe4, 0x26, 0xf4, 0xca, 0xa9, 0x9a, 0xe2,
	0x24, 0x54, 0xfb, 0x30, 0xf0, 0x31, 0xa1, 0xb0, 0x05, 0x03, 0x26, 0x7d, 0x57, 0x7e, 0xc9, 0x81,
	0x99, 0x1d, 0xda, 0x78, 0xda, 0xf6, 0x3d, 0x06, 0x3f, 0x13, 0x2b, 0xb2, 0x3e, 0x00, 0x25, 0xaf,
	0xc3, 0x0e, 0x31, 0x41, 0xac, 0x6b, 0xe7, 0x96, 0x73, 0x95, 0xd2, 0x96, 0xfd, 0xdb, 0x4f, 0x1b,
	0xf3, 0x2a, 0xcf, 0x47, 0xbe, 0x4f, 0x20, 0xa5, 0xbb, 0x8c, 0xa0, 0xa0, 0xe1, 0xf6, 0x5d, 0xad,
	0x8f, 0x40, 0x41, 0xe6, 0x64, 0x8f, 0x2e, 0xe7, 0x2a, 0x93, 0xf7, 0x9d, 0xcd, 0x24, 0xcd, 0x9b,
	0x12, 0x63, 0xab, 0xf4, 0xe2, 0xcf, 0xa5, 0x91, 0x1f, 0x2f, 0xcf, 0xaa, 0x39, 0x57, 0xbd, 0xf4,
	0xf0, 0xc3, 0x6f, 0x2f, 0xcf, 0xaa, 0xfd, 0x70, 0xcf, 0x2f, 0xcf, 0xaa, 0x6b, 0x91, 0x4c, 0x4e,
	0xc3, 0x5c, 0xb4, 0xf5, 0xae, 0x2c, 0x80, 0xdb, 0x9a, 0xca, 0x85, 0xb4, 0x8d, 0x03, 0x0a, 0x57,
	0x9e, 0x8f, 0x82, 0xd9, 0x1d, 0xda, 0x78, 0x4c, 0x20, 0xb7, 0xc9, 0xf7, 0x2d, 0x1b, 0x4c, 0xd4,
	0xb9, 0x02, 0x13, 0x99, 0x9d, 0xdb, 0x13, 0xad, 0x65, 0x30, 0xe9, 0x23, 0xda, 0x6e, 0x7a, 0xdd,
	0x4f, 0xbd, 0x16, 0x14, 0x69, 0x94, 0xdc, 0xa8, 0xca, 0x9a, 0x05, 0x63, 0x07, 0x08, 0xdb, 0x63,
	0xc2, 0xc2, 0x1f, 0x2d, 0x07, 0x14, 0x9b, 0xb8, 0xee, 0x31, 0x84, 0x03, 0x3b, 0x2f, 0xd4, 0xa1,
	0xcc, 0x91, 0x4e, 0xe0, 0x01, 0x45, 0x0c, 0xda, 0xe3, 0x12, 0x49, 0x89, 0xd6, 0x2d, 0x50, 0x68,
	0x20, 0x76, 0xd8, 0x39, 0xb0, 0x0b, 0xc2, 0xa0, 0x24, 0x11, 0x0d, 0x05, 0x47, 0xd0, 0x47, 0x81,
	0x3d, 0xa1, 0xa2, 0x29, 0x99, 0x47, 0x63, 0x27, 0x88, 0x31, 0x48, 0xec, 0xa2, 0x8c, 0xa6, 0x44,
	0x1e, 0xcd, 0x3b, 0xf6, 0x98, 0x47, 0xec, 0x92, 0x8c, 0x26, 0xa5, 0x87, 0x53, 0x9c, 0xd2, 0x5e,
	0x76, 0x2b, 0x0e, 0xb0, 0x75, 0x2e, 0x42, 0xa2, 0xbe, 0x1f, 0x03, 0xf3, 0xa1, 0xf1, 0x29, 0x85,
	0x64, 0x30, 0x59, 0xf3, 0x60, 0x1c, 0x05, 0x3e, 0x3c, 0x55, 0x34, 0x49, 0x81, 0x6b, 0xf1, 0x49,
	0x00, 0x89, 0xa2, 0x48, 0x0a, 0x3a, 0xb1, 0x79, 0x23, 0xb1, 0xe3, 0xe9, 0xc4, 0x16, 0xcc, 0xc4,
	0x4e, 0x98, 0x88, 0x2d, 0x1a, 0x89, 0x2d, 0x99, 0x89, 0x05, 0x26, 0x62, 0x27, 0xa3, 0xc4, 0x5a,
	0x15, 0x30, 0x43, 0x60, 0xbb, 0xc3, 0xc4, 0x6a, 0x76, 0xeb, 0x98, 0x40, 0x7b, 0x6a, 0x39, 0x57,
	0xc9, 0xbb, 0xba, 0xda, 0x5a, 0x04, 0x25, 0x41, 0x18, 0xf4, 0x1f, 0x31, 0x7b, 0x5a, 0xf8, 0xf4,
	0x15, 0xdc, 0xda, 0x11, 0x7d, 0xcb, 0xad, 0xaf, 0x49, 0x6b, 0xa8, 0xd0, 0xca, 0x57, 0x06, 0x8b,
	0x69, 0x15, 0xd2, 0x4b, 0x28, 0xf7, 0xc1, 0x4d, 0x09, 0x5f, 0xdd, 0x12, 0x26, 0x2a, 0x14, 0x96,
	0x70, 0x4f, 0x54, 0xf0, 0x09, 0x6c, 0xc2, 0x6b, 0x55, 0x30, 0x15, 0x35, 0x11, 0x35, 0x44, 0xfd,
	0x7b, 0x14, 0x58, 0xb1, 0xce, 0xda, 0xe5, 0x5f, 0xdd, 0xff, 0xa8, 0x6d, 0x16, 0x41, 0x49, 0x7c,
	0xc4, 0x23, 0x4d, 0xd3, 0x57, 0x58, 0x55, 0x30, 0x2b, 0xbe, 0xea, 0x75, 0x04, 0x83, 0x7a, 0xf7,
	0x13, 0x78, 0x0c, 0x9b, 0xaa, 0x7f, 0x12, 0x7a, 0x5e, 0xb0, 0x2e, 0xf4, 0x08, 0xdd, 0x3e, 0x6d,
	0x43, 0xc2, 0xf5, 0x50, 0xf4, 0x54, 0xde, 0xd5, 0xd5, 0xbc, 0x51, 0x8e, 0x21, 0x41, 0xcf, 0x10,
	0xf4, 0x45, 0x6f, 0x15, 0xdd, 0x50, 0xb6, 0xca, 0x00, 0xf4, 0x9e, 0xb7, 0xba, 0xaa, 0xc1, 0x22,
	0x1a, 0xbe, 0x22, 0x29, 0xc9, 0x36, 0x7d, 0xe2, 0x31, 0x28, 0x9a, 0x2d, 0xef, 0x26, 0xf4, 0xdc,
	0x37, 0x72, 0xa2, 0x3e, 0xc6, 0x9d, 0x80, 0x89, 0xee, 0xcb, 0xbb, 0x09, 0xbd, 0x56, 0x92, 0x45,
	0xe0, 0x24, 0x19, 0xd7, 0x0b, 0xd2, 0xef, 0x93, 0x9b, 0x82, 0xfc, 0x3f, 0x05, 0xd1, 0x18, 0x0f,
	0x0b, 0xe2, 0x8a, 0x7a, 0xf4, 0x77, 0xd0, 0xbf, 0xaa, 0x47, 0x2a, 0xa2, 0x16, 0x33, 0x44, 0xfc,
	0x43, 0xce, 0x65, 0xdb, 0x72, 0xd5, 0x83, 0xf0, 0xca, 0x00, 0x30, 0x8f, 0x34, 0x20, 0xe3, 0x81,
	0x14, 0x68, 0x44, 0x13, 0xaf, 0xf9, 0x98, 0x5e, 0xf3, 0x0a, 0x98, 0x89, 0xb0, 0xb3, 0xd7, 0x6d,
	0xf7, 0xfa, 0x42, 0x57, 0x8b, 0x15, 0xe0, 0x16, 0x17, 0x7b, 0xf3, 0x8c, 0x12, 0xf9, 0xe9, 0x40,
	0x99, 0x77, 0x04, 0xf7, 0xf0, 0x11, 0x0c, 0xa8, 0xea, 0x83, 0xa8, 0x4a, 0xcb, 0x5e, 0xce, 0x6c,
	0xd1, 0xf4, 0xc2, 0xd4, 0x7f, 0x1d, 0x05, 0x0b, 0xe1, 0xe6, 0x10, 0xa6, 0xed, 0xfe, 0x32, 0xae,
	0xbc, 0x09, 0x1c, 0x50, 0x54, 0x59, 0xf4, 0xf6, 0x41, 0x28, 0x6b, 0xb4, 0xe5, 0xb3, 0x69, 0x1b,
	0x1f, 0x82, 0xb6, 0xc2, 0x40, 0xda, 0x26, 0xe2, 0xb4, 0xc5, 0x8e, 0x96, 0xa2, 0x7e, 0xb4, 0xdc,
	0x05, 0x73, 0x02, 0x4e, 0x32, 0xb8, 0xcb, 0xc9, 0xf4, 0x55, 0xef, 0x27, 0x0d, 0x1a, 0xc1, 0xab,
	0xe0, 0x8e, 0x91, 0x44, 0x9d, 0x6a, 0xd9, 0xf6, 0x37, 0x54, 0x5f, 0x8b, 0xea, 0x74, 0x12, 0x43,
	0xaa, 0xbf, 0x10, 0x4c, 0xcb, 0xed, 0x7e, 0x5d, 0xa6, 0x53, 0xf1, 0xd3, 0x43, 0x87, 0xf8, 0x3f,
	0xe4, 0xc0, 0xeb, 0xdc, 0x0b, 0xd1, 0x76, 0x87, 0xc1, 0xe1, 0xc0, 0xd7, 0xc0, 0x74, 0x84, 0xdf,
	0x8f, 0x7d, 0xb5, 0x88, 0xb8, 0x92, 0x7b, 0xf9, 0x32, 0xaa, 0x0b, 0x3d, 0x8a, 0x03, 0x55, 0xfb,
	0xb8, 0x52, 0x34, 0xc7, 0x31, 0xf2, 0xc5, 0x29, 0xa1, 0xae, 0x49, 0x3d, 0x59, 0x4b, 0x67, 0x09,
	0xbc, 0x99, 0xba, 0xd0, 0x30, 0x95, 0x7d, 0xf1, 0xed, 0xf8, 0x1c, 0xb1, 0x43, 0x9f, 0x78, 0x27,
	0xb2, 0x24, 0xb2, 0x3c, 0x19, 0xb9, 0xc4, 0x1a, 0x6c, 0x54, 0x6b, 0x30, 0x6d, 0x05, 0x77, 0xc0,
	0x92, 0x01, 0xa0, 0xb7, 0x86, 0xfb, 0x3f, 0x4f, 0x81, 0xb1, 0x1d, 0xda, 0xb0, 0xbe, 0x02, 0x53,
	0xb1, 0xbb, 0xf3, 0x6a, 0xda, 0x9d, 0x57, 0xbb, 0x9d, 0x3a, 0xef, 0x0c, 0xe1, 0xd4, 0x43, 0xb2,
	0xea, 0x60, 0x3a, 0x7e, 0x7d, 0x5d, 0x33, 0xbc, 0x1d, 0xf3, 0x72, 0xee, 0x0e, 0xe3, 0x15, 0x82,
	0x60, 0x30, 0x97, 0xbc, 0xfa, 0x55, 0x32, 0x43, 0x44, 0x3c, 0x9d, 0x77, 0x87, 0xf5, 0x8c, 0x02,
	0x26, 0x2f, 0x2a, 0x95, 0x4c, 0x5e, 0x86, 0x01, 0x34, 0x8e, 0xd6, 0x1c, 0x30, 0x39, 0x57, 0x9b,
	0x00, 0x13, 0x9e, 0x46, 0x40, 0xe3, 0x54, 0x6d, 0x21, 0x30, 0xa3, 0x4f, 0xd4, 0xeb, 0x03, 0x69,
	0x12, 0x7e, 0xce, 0xe6, 0x70, 0x7e, 0x51, 0x28, 0x7d, 0x56, 0x5c, 0x1f, 0x48, 0x50, 0x36, 0x94,
	0x61, 0x12, 0xe2, 0x50, 0xfa, 0x18, 0xb4, 0x3e, 0x90, 0x9a, 0x6c, 0x28, 0xc3, 0x08, 0xc4, 0xb7,
	0x56, 0x6c, 0xfc, 0x31, 0x6d, 0xad, 0xa8, 0x93, 0x71, 0x6b, 0xa5, 0x4d, 0x1a, 0xd6, 0xd7, 0xe0,
	0x96, 0x61, 0xca, 0xd8, 0xc8, 0xac, 0x80, 0xee, 0xee, 0xbc, 0x7f, 0x25, 0xf7, 0x28, 0xbe, 0xe1,
	0xe8, 0xdd, 0xc8, 0x2c, 0xcb, 0xd0, 0xf8, 0xd9, 0x67, 0x12, 0xc7, 0x37, 0x1c, 0x48, 0x1b, 0x99,
	0xb5, 0x1a, 0x1a, 0x3f, 0xfb, 0x4c, 0xb2, 0x08, 0xb0, 0x52, 0xce, 0xa3, 0xb7, 0x4d, 0xc1, 0x12,
	0xae, 0xce, 0xbd, 0xa1, 0x5d, 0x43, 0xcc, 0x53, 0x30, 0x9f, 0x7a, 0x72, 0x98, 0x1a, 0x27, 0xcd,
	0xd9, 0x79, 0x70, 0x05, 0xe7, 0x1e, 0xb2, 0x33, 0xfe, 0xcd, 0xe5, 0x59, 0x35, 0xb7, 0xf5, 0xde,
	0x8b, 0xf3, 0x72, 0xee, 0xe5, 0x79, 0x39, 0xf7, 0xd7, 0x79, 0x39, 0xf7, 0xdd, 0x45, 0x79, 0xe4,
	0xe5, 0x45, 0x79, 0xe4, 0xf7, 0x8b, 0xf2, 0xc8, 0x97, 0x4e, 0xea, 0xaf, 0x9d, 0xac, 0xdb, 0x86,
	0xf4, 0xa0, 0x20, 0x7e, 0xae, 0x7d, 0xf0, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xf5, 0x54, 0xce,
	0x5e, 0xd7, 0x16, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	// UpdateParams defines a (governance) operation for updating the module
	// parameters. The authority defaults to the x/gov module account.
	UpdateParams(ctx context.Context, in *MsgUpdateParams, opts ...grpc.CallOption) (*MsgUpdateParamsResponse, error)
	CreateProfile(ctx context.Context, in *MsgCreateProfile, opts ...grpc.CallOption) (*MsgCreateProfileResponse, error)
	CreateUserProfile(ctx context.Context, in *MsgCreateUserProfile, opts ...grpc.CallOption) (*MsgCreateUserProfileResponse, error)
	UpdateUserProfile(ctx context.Context, in *MsgUpdateUserProfile, opts ...grpc.CallOption) (*MsgUpdateUserProfileResponse, error)
	DeleteUserProfile(ctx context.Context, in *MsgDeleteUserProfile, opts ...grpc.CallOption) (*MsgDeleteUserProfileResponse, error)
	CreateUserSkill(ctx context.Context, in *MsgCreateUserSkill, opts ...grpc.CallOption) (*MsgCreateUserSkillResponse, error)
	UpdateUserSkill(ctx context.Context, in *MsgUpdateUserSkill, opts ...grpc.CallOption) (*MsgUpdateUserSkillResponse, error)
	DeleteUserSkill(ctx context.Context, in *MsgDeleteUserSkill, opts ...grpc.CallOption) (*MsgDeleteUserSkillResponse, error)
	EndorseSkill(ctx context.Context, in *MsgEndorseSkill, opts ...grpc.CallOption) (*MsgEndorseSkillResponse, error)
	CreateSkillEndorsement(ctx context.Context, in *MsgCreateSkillEndorsement, opts ...grpc.CallOption) (*MsgCreateSkillEndorsementResponse, error)
	UpdateSkillEndorsement(ctx context.Context, in *MsgUpdateSkillEndorsement, opts ...grpc.CallOption) (*MsgUpdateSkillEndorsementResponse, error)
	DeleteSkillEndorsement(ctx context.Context, in *MsgDeleteSkillEndorsement, opts ...grpc.CallOption) (*MsgDeleteSkillEndorsementResponse, error)
	DisputeEndorsement(ctx context.Context, in *MsgDisputeEndorsement, opts ...grpc.CallOption) (*MsgDisputeEndorsementResponse, error)
	WithdrawStakedTokens(ctx context.Context, in *MsgWithdrawStakedTokens, opts ...grpc.CallOption) (*MsgWithdrawStakedTokensResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) UpdateParams(ctx context.Context, in *MsgUpdateParams, opts ...grpc.CallOption) (*MsgUpdateParamsResponse, error) {
	out := new(MsgUpdateParamsResponse)
	err := c.cc.Invoke(ctx, "/skillchain.profile.Msg/UpdateParams", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateProfile(ctx context.Context, in *MsgCreateProfile, opts ...grpc.CallOption) (*MsgCreateProfileResponse, error) {
	out := new(MsgCreateProfileResponse)
	err := c.cc.Invoke(ctx, "/skillchain.profile.Msg/CreateProfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateUserProfile(ctx context.Context, in *MsgCreateUserProfile, opts ...grpc.CallOption) (*MsgCreateUserProfileResponse, error) {
	out := new(MsgCreateUserProfileResponse)
	err := c.cc.Invoke(ctx, "/skillchain.profile.Msg/CreateUserProfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateUserProfile(ctx context.Context, in *MsgUpdateUserProfile, opts ...grpc.CallOption) (*MsgUpdateUserProfileResponse, error) {
	out := new(MsgUpdateUserProfileResponse)
	err := c.cc.Invoke(ctx, "/skillchain.profile.Msg/UpdateUserProfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteUserProfile(ctx context.Context, in *MsgDeleteUserProfile, opts ...grpc.CallOption) (*MsgDeleteUserProfileResponse, error) {
	out := new(MsgDeleteUserProfileResponse)
	err := c.cc.Invoke(ctx, "/skillchain.profile.Msg/DeleteUserProfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateUserSkill(ctx context.Context, in *MsgCreateUserSkill, opts ...grpc.CallOption) (*MsgCreateUserSkillResponse, error) {
	out := new(MsgCreateUserSkillResponse)
	err := c.cc.Invoke(ctx, "/skillchain.profile.Msg/CreateUserSkill", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateUserSkill(ctx context.Context, in *MsgUpdateUserSkill, opts ...grpc.CallOption) (*MsgUpdateUserSkillResponse, error) {
	out := new(MsgUpdateUserSkillResponse)
	err := c.cc.Invoke(ctx, "/skillchain.profile.Msg/UpdateUserSkill", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteUserSkill(ctx context.Context, in *MsgDeleteUserSkill, opts ...grpc.CallOption) (*MsgDeleteUserSkillResponse, error) {
	out := new(MsgDeleteUserSkillResponse)
	err := c.cc.Invoke(ctx, "/skillchain.profile.Msg/DeleteUserSkill", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) EndorseSkill(ctx context.Context, in *MsgEndorseSkill, opts ...grpc.CallOption) (*MsgEndorseSkillResponse, error) {
	out := new(MsgEndorseSkillResponse)
	err := c.cc.Invoke(ctx, "/skillchain.profile.Msg/EndorseSkill", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateSkillEndorsement(ctx context.Context, in *MsgCreateSkillEndorsement, opts ...grpc.CallOption) (*MsgCreateSkillEndorsementResponse, error) {
	out := new(MsgCreateSkillEndorsementResponse)
	err := c.cc.Invoke(ctx, "/skillchain.profile.Msg/CreateSkillEndorsement", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateSkillEndorsement(ctx context.Context, in *MsgUpdateSkillEndorsement, opts ...grpc.CallOption) (*MsgUpdateSkillEndorsementResponse, error) {
	out := new(MsgUpdateSkillEndorsementResponse)
	err := c.cc.Invoke(ctx, "/skillchain.profile.Msg/UpdateSkillEndorsement", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteSkillEndorsement(ctx context.Context, in *MsgDeleteSkillEndorsement, opts ...grpc.CallOption) (*MsgDeleteSkillEndorsementResponse, error) {
	out := new(MsgDeleteSkillEndorsementResponse)
	err := c.cc.Invoke(ctx, "/skillchain.profile.Msg/DeleteSkillEndorsement", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DisputeEndorsement(ctx context.Context, in *MsgDisputeEndorsement, opts ...grpc.CallOption) (*MsgDisputeEndorsementResponse, error) {
	out := new(MsgDisputeEndorsementResponse)
	err := c.cc.Invoke(ctx, "/skillchain.profile.Msg/DisputeEndorsement", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) WithdrawStakedTokens(ctx context.Context, in *MsgWithdrawStakedTokens, opts ...grpc.CallOption) (*MsgWithdrawStakedTokensResponse, error) {
	out := new(MsgWithdrawStakedTokensResponse)
	err := c.cc.Invoke(ctx, "/skillchain.profile.Msg/WithdrawStakedTokens", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	// UpdateParams defines a (governance) operation for updating the module
	// parameters. The authority defaults to the x/gov module account.
	UpdateParams(context.Context, *MsgUpdateParams) (*MsgUpdateParamsResponse, error)
	CreateProfile(context.Context, *MsgCreateProfile) (*MsgCreateProfileResponse, error)
	CreateUserProfile(context.Context, *MsgCreateUserProfile) (*MsgCreateUserProfileResponse, error)
	UpdateUserProfile(context.Context, *MsgUpdateUserProfile) (*MsgUpdateUserProfileResponse, error)
	DeleteUserProfile(context.Context, *MsgDeleteUserProfile) (*MsgDeleteUserProfileResponse, error)
	CreateUserSkill(context.Context, *MsgCreateUserSkill) (*MsgCreateUserSkillResponse, error)
	UpdateUserSkill(context.Context, *MsgUpdateUserSkill) (*MsgUpdateUserSkillResponse, error)
	DeleteUserSkill(context.Context, *MsgDeleteUserSkill) (*MsgDeleteUserSkillResponse, error)
	EndorseSkill(context.Context, *MsgEndorseSkill) (*MsgEndorseSkillResponse, error)
	CreateSkillEndorsement(context.Context, *MsgCreateSkillEndorsement) (*MsgCreateSkillEndorsementResponse, error)
	UpdateSkillEndorsement(context.Context, *MsgUpdateSkillEndorsement) (*MsgUpdateSkillEndorsementResponse, error)
	DeleteSkillEndorsement(context.Context, *MsgDeleteSkillEndorsement) (*MsgDeleteSkillEndorsementResponse, error)
	DisputeEndorsement(context.Context, *MsgDisputeEndorsement) (*MsgDisputeEndorsementResponse, error)
	WithdrawStakedTokens(context.Context, *MsgWithdrawStakedTokens) (*MsgWithdrawStakedTokensResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) UpdateParams(ctx context.Context, req *MsgUpdateParams) (*MsgUpdateParamsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateParams not implemented")
}
func (*UnimplementedMsgServer) CreateProfile(ctx context.Context, req *MsgCreateProfile) (*MsgCreateProfileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateProfile not implemented")
}
func (*UnimplementedMsgServer) CreateUserProfile(ctx context.Context, req *MsgCreateUserProfile) (*MsgCreateUserProfileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateUserProfile not implemented")
}
func (*UnimplementedMsgServer) UpdateUserProfile(ctx context.Context, req *MsgUpdateUserProfile) (*MsgUpdateUserProfileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateUserProfile not implemented")
}
func (*UnimplementedMsgServer) DeleteUserProfile(ctx context.Context, req *MsgDeleteUserProfile) (*MsgDeleteUserProfileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteUserProfile not implemented")
}
func (*UnimplementedMsgServer) CreateUserSkill(ctx context.Context, req *MsgCreateUserSkill) (*MsgCreateUserSkillResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateUserSkill not implemented")
}
func (*UnimplementedMsgServer) UpdateUserSkill(ctx context.Context, req *MsgUpdateUserSkill) (*MsgUpdateUserSkillResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateUserSkill not implemented")
}
func (*UnimplementedMsgServer) DeleteUserSkill(ctx context.Context, req *MsgDeleteUserSkill) (*MsgDeleteUserSkillResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteUserSkill not implemented")
}
func (*UnimplementedMsgServer) EndorseSkill(ctx context.Context, req *MsgEndorseSkill) (*MsgEndorseSkillResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EndorseSkill not implemented")
}
func (*UnimplementedMsgServer) CreateSkillEndorsement(ctx context.Context, req *MsgCreateSkillEndorsement) (*MsgCreateSkillEndorsementResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSkillEndorsement not implemented")
}
func (*UnimplementedMsgServer) UpdateSkillEndorsement(ctx context.Context, req *MsgUpdateSkillEndorsement) (*MsgUpdateSkillEndorsementResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSkillEndorsement not implemented")
}
func (*UnimplementedMsgServer) DeleteSkillEndorsement(ctx context.Context, req *MsgDeleteSkillEndorsement) (*MsgDeleteSkillEndorsementResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteSkillEndorsement not implemented")
}
func (*UnimplementedMsgServer) DisputeEndorsement(ctx context.Context, req *MsgDisputeEndorsement) (*MsgDisputeEndorsementResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DisputeEndorsement not implemented")
}
func (*UnimplementedMsgServer) WithdrawStakedTokens(ctx context.Context, req *MsgWithdrawStakedTokens) (*MsgWithdrawStakedTokensResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WithdrawStakedTokens not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_UpdateParams_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateParams(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/skillchain.profile.Msg/UpdateParams",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateParams(ctx, req.(*MsgUpdateParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateProfile)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/skillchain.profile.Msg/CreateProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateProfile(ctx, req.(*MsgCreateProfile))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateUserProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateUserProfile)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateUserProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/skillchain.profile.Msg/CreateUserProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateUserProfile(ctx, req.(*MsgCreateUserProfile))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateUserProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateUserProfile)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateUserProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/skillchain.profile.Msg/UpdateUserProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateUserProfile(ctx, req.(*MsgUpdateUserProfile))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteUserProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteUserProfile)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteUserProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/skillchain.profile.Msg/DeleteUserProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteUserProfile(ctx, req.(*MsgDeleteUserProfile))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateUserSkill_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateUserSkill)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateUserSkill(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/skillchain.profile.Msg/CreateUserSkill",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateUserSkill(ctx, req.(*MsgCreateUserSkill))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateUserSkill_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateUserSkill)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateUserSkill(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/skillchain.profile.Msg/UpdateUserSkill",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateUserSkill(ctx, req.(*MsgUpdateUserSkill))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteUserSkill_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteUserSkill)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteUserSkill(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/skillchain.profile.Msg/DeleteUserSkill",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteUserSkill(ctx, req.(*MsgDeleteUserSkill))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_EndorseSkill_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgEndorseSkill)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).EndorseSkill(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/skillchain.profile.Msg/EndorseSkill",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).EndorseSkill(ctx, req.(*MsgEndorseSkill))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateSkillEndorsement_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateSkillEndorsement)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateSkillEndorsement(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/skillchain.profile.Msg/CreateSkillEndorsement",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateSkillEndorsement(ctx, req.(*MsgCreateSkillEndorsement))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateSkillEndorsement_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateSkillEndorsement)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateSkillEndorsement(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/skillchain.profile.Msg/UpdateSkillEndorsement",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateSkillEndorsement(ctx, req.(*MsgUpdateSkillEndorsement))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteSkillEndorsement_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteSkillEndorsement)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteSkillEndorsement(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/skillchain.profile.Msg/DeleteSkillEndorsement",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteSkillEndorsement(ctx, req.(*MsgDeleteSkillEndorsement))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DisputeEndorsement_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDisputeEndorsement)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DisputeEndorsement(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/skillchain.profile.Msg/DisputeEndorsement",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DisputeEndorsement(ctx, req.(*MsgDisputeEndorsement))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_WithdrawStakedTokens_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgWithdrawStakedTokens)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).WithdrawStakedTokens(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/skillchain.profile.Msg/WithdrawStakedTokens",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).WithdrawStakedTokens(ctx, req.(*MsgWithdrawStakedTokens))
	}
	return interceptor(ctx, in, info, handler)
}

var Msg_serviceDesc = _Msg_serviceDesc
var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "skillchain.profile.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateParams",
			Handler:    _Msg_UpdateParams_Handler,
		},
		{
			MethodName: "CreateProfile",
			Handler:    _Msg_CreateProfile_Handler,
		},
		{
			MethodName: "CreateUserProfile",
			Handler:    _Msg_CreateUserProfile_Handler,
		},
		{
			MethodName: "UpdateUserProfile",
			Handler:    _Msg_UpdateUserProfile_Handler,
		},
		{
			MethodName: "DeleteUserProfile",
			Handler:    _Msg_DeleteUserProfile_Handler,
		},
		{
			MethodName: "CreateUserSkill",
			Handler:    _Msg_CreateUserSkill_Handler,
		},
		{
			MethodName: "UpdateUserSkill",
			Handler:    _Msg_UpdateUserSkill_Handler,
		},
		{
			MethodName: "DeleteUserSkill",
			Handler:    _Msg_DeleteUserSkill_Handler,
		},
		{
			MethodName: "EndorseSkill",
			Handler:    _Msg_EndorseSkill_Handler,
		},
		{
			MethodName: "CreateSkillEndorsement",
			Handler:    _Msg_CreateSkillEndorsement_Handler,
		},
		{
			MethodName: "UpdateSkillEndorsement",
			Handler:    _Msg_UpdateSkillEndorsement_Handler,
		},
		{
			MethodName: "DeleteSkillEndorsement",
			Handler:    _Msg_DeleteSkillEndorsement_Handler,
		},
		{
			MethodName: "DisputeEndorsement",
			Handler:    _Msg_DisputeEndorsement_Handler,
		},
		{
			MethodName: "WithdrawStakedTokens",
			Handler:    _Msg_WithdrawStakedTokens_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "skillchain/profile/tx.proto",
}

func (m *MsgUpdateParams) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateParams) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateParams) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Authority) > 0 {
		i -= len(m.Authority)
		copy(dAtA[i:], m.Authority)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Authority)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateParamsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateParamsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateParamsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateProfile) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateProfile) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateProfile) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Avatar) > 0 {
		i -= len(m.Avatar)
		copy(dAtA[i:], m.Avatar)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Avatar)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.Twitter) > 0 {
		i -= len(m.Twitter)
		copy(dAtA[i:], m.Twitter)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Twitter)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.Linkedin) > 0 {
		i -= len(m.Linkedin)
		copy(dAtA[i:], m.Linkedin)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Linkedin)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Github) > 0 {
		i -= len(m.Github)
		copy(dAtA[i:], m.Github)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Github)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Website) > 0 {
		i -= len(m.Website)
		copy(dAtA[i:], m.Website)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Website)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Location) > 0 {
		i -= len(m.Location)
		copy(dAtA[i:], m.Location)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Location)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Bio) > 0 {
		i -= len(m.Bio)
		copy(dAtA[i:], m.Bio)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Bio)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.DisplayName) > 0 {
		i -= len(m.DisplayName)
		copy(dAtA[i:], m.DisplayName)
		i = encodeVarintTx(dAtA, i, uint64(len(m.DisplayName)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateProfileResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateProfileResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateProfileResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateUserProfile) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateUserProfile) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateUserProfile) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.UpdatedAt != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.UpdatedAt))
		i--
		dAtA[i] = 0x70
	}
	if m.CreatedAt != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CreatedAt))
		i--
		dAtA[i] = 0x68
	}
	if m.ReputationScore != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.ReputationScore))
		i--
		dAtA[i] = 0x60
	}
	if len(m.Avatar) > 0 {
		i -= len(m.Avatar)
		copy(dAtA[i:], m.Avatar)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Avatar)))
		i--
		dAtA[i] = 0x5a
	}
	if len(m.Twitter) > 0 {
		i -= len(m.Twitter)
		copy(dAtA[i:], m.Twitter)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Twitter)))
		i--
		dAtA[i] = 0x52
	}
	if len(m.Linkedin) > 0 {
		i -= len(m.Linkedin)
		copy(dAtA[i:], m.Linkedin)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Linkedin)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.Github) > 0 {
		i -= len(m.Github)
		copy(dAtA[i:], m.Github)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Github)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.Website) > 0 {
		i -= len(m.Website)
		copy(dAtA[i:], m.Website)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Website)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Location) > 0 {
		i -= len(m.Location)
		copy(dAtA[i:], m.Location)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Location)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Bio) > 0 {
		i -= len(m.Bio)
		copy(dAtA[i:], m.Bio)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Bio)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.DisplayName) > 0 {
		i -= len(m.DisplayName)
		copy(dAtA[i:], m.DisplayName)
		i = encodeVarintTx(dAtA, i, uint64(len(m.DisplayName)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Owner) > 0 {
		i -= len(m.Owner)
		copy(dAtA[i:], m.Owner)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Owner)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateUserProfileResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateUserProfileResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateUserProfileResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateUserProfile) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateUserProfile) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateUserProfile) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.UpdatedAt != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.UpdatedAt))
		i--
		dAtA[i] = 0x70
	}
	if m.CreatedAt != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CreatedAt))
		i--
		dAtA[i] = 0x68
	}
	if m.ReputationScore != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.ReputationScore))
		i--
		dAtA[i] = 0x60
	}
	if len(m.Avatar) > 0 {
		i -= len(m.Avatar)
		copy(dAtA[i:], m.Avatar)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Avatar)))
		i--
		dAtA[i] = 0x5a
	}
	if len(m.Twitter) > 0 {
		i -= len(m.Twitter)
		copy(dAtA[i:], m.Twitter)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Twitter)))
		i--
		dAtA[i] = 0x52
	}
	if len(m.Linkedin) > 0 {
		i -= len(m.Linkedin)
		copy(dAtA[i:], m.Linkedin)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Linkedin)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.Github) > 0 {
		i -= len(m.Github)
		copy(dAtA[i:], m.Github)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Github)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.Website) > 0 {
		i -= len(m.Website)
		copy(dAtA[i:], m.Website)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Website)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Location) > 0 {
		i -= len(m.Location)
		copy(dAtA[i:], m.Location)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Location)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Bio) > 0 {
		i -= len(m.Bio)
		copy(dAtA[i:], m.Bio)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Bio)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.DisplayName) > 0 {
		i -= len(m.DisplayName)
		copy(dAtA[i:], m.DisplayName)
		i = encodeVarintTx(dAtA, i, uint64(len(m.DisplayName)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Owner) > 0 {
		i -= len(m.Owner)
		copy(dAtA[i:], m.Owner)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Owner)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateUserProfileResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateUserProfileResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateUserProfileResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteUserProfile) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteUserProfile) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteUserProfile) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteUserProfileResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteUserProfileResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteUserProfileResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateUserSkill) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateUserSkill) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateUserSkill) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.EndorsementCount != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.EndorsementCount))
		i--
		dAtA[i] = 0x50
	}
	if m.VerificationDate != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.VerificationDate))
		i--
		dAtA[i] = 0x48
	}
	if len(m.VerifiedBy) > 0 {
		i -= len(m.VerifiedBy)
		copy(dAtA[i:], m.VerifiedBy)
		i = encodeVarintTx(dAtA, i, uint64(len(m.VerifiedBy)))
		i--
		dAtA[i] = 0x42
	}
	if m.Verified {
		i--
		if m.Verified {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x38
	}
	if m.YearsExperience != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.YearsExperience))
		i--
		dAtA[i] = 0x30
	}
	if len(m.ProficiencyLevel) > 0 {
		i -= len(m.ProficiencyLevel)
		copy(dAtA[i:], m.ProficiencyLevel)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ProficiencyLevel)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.SkillName) > 0 {
		i -= len(m.SkillName)
		copy(dAtA[i:], m.SkillName)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SkillName)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Owner) > 0 {
		i -= len(m.Owner)
		copy(dAtA[i:], m.Owner)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Owner)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateUserSkillResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateUserSkillResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateUserSkillResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateUserSkill) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateUserSkill) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateUserSkill) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.EndorsementCount != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.EndorsementCount))
		i--
		dAtA[i] = 0x50
	}
	if m.VerificationDate != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.VerificationDate))
		i--
		dAtA[i] = 0x48
	}
	if len(m.VerifiedBy) > 0 {
		i -= len(m.VerifiedBy)
		copy(dAtA[i:], m.VerifiedBy)
		i = encodeVarintTx(dAtA, i, uint64(len(m.VerifiedBy)))
		i--
		dAtA[i] = 0x42
	}
	if m.Verified {
		i--
		if m.Verified {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x38
	}
	if m.YearsExperience != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.YearsExperience))
		i--
		dAtA[i] = 0x30
	}
	if len(m.ProficiencyLevel) > 0 {
		i -= len(m.ProficiencyLevel)
		copy(dAtA[i:], m.ProficiencyLevel)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ProficiencyLevel)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.SkillName) > 0 {
		i -= len(m.SkillName)
		copy(dAtA[i:], m.SkillName)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SkillName)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Owner) > 0 {
		i -= len(m.Owner)
		copy(dAtA[i:], m.Owner)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Owner)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateUserSkillResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateUserSkillResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateUserSkillResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteUserSkill) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteUserSkill) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteUserSkill) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteUserSkillResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteUserSkillResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteUserSkillResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgEndorseSkill) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgEndorseSkill) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgEndorseSkill) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.StakeTokens != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.StakeTokens))
		i--
		dAtA[i] = 0x30
	}
	if len(m.Comment) > 0 {
		i -= len(m.Comment)
		copy(dAtA[i:], m.Comment)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Comment)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.EndorsementType) > 0 {
		i -= len(m.EndorsementType)
		copy(dAtA[i:], m.EndorsementType)
		i = encodeVarintTx(dAtA, i, uint64(len(m.EndorsementType)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.SkillName) > 0 {
		i -= len(m.SkillName)
		copy(dAtA[i:], m.SkillName)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SkillName)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.TargetUser) > 0 {
		i -= len(m.TargetUser)
		copy(dAtA[i:], m.TargetUser)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TargetUser)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgEndorseSkillResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgEndorseSkillResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgEndorseSkillResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateSkillEndorsement) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateSkillEndorsement) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateSkillEndorsement) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.SkillTokensStaked != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.SkillTokensStaked))
		i--
		dAtA[i] = 0x48
	}
	if m.CreatedAt != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CreatedAt))
		i--
		dAtA[i] = 0x40
	}
	if len(m.Comment) > 0 {
		i -= len(m.Comment)
		copy(dAtA[i:], m.Comment)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Comment)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.EndorsementType) > 0 {
		i -= len(m.EndorsementType)
		copy(dAtA[i:], m.EndorsementType)
		i = encodeVarintTx(dAtA, i, uint64(len(m.EndorsementType)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.SkillName) > 0 {
		i -= len(m.SkillName)
		copy(dAtA[i:], m.SkillName)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SkillName)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.TargetUser) > 0 {
		i -= len(m.TargetUser)
		copy(dAtA[i:], m.TargetUser)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TargetUser)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Endorser) > 0 {
		i -= len(m.Endorser)
		copy(dAtA[i:], m.Endorser)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Endorser)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateSkillEndorsementResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateSkillEndorsementResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateSkillEndorsementResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateSkillEndorsement) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateSkillEndorsement) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateSkillEndorsement) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.SkillTokensStaked != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.SkillTokensStaked))
		i--
		dAtA[i] = 0x48
	}
	if m.CreatedAt != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CreatedAt))
		i--
		dAtA[i] = 0x40
	}
	if len(m.Comment) > 0 {
		i -= len(m.Comment)
		copy(dAtA[i:], m.Comment)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Comment)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.EndorsementType) > 0 {
		i -= len(m.EndorsementType)
		copy(dAtA[i:], m.EndorsementType)
		i = encodeVarintTx(dAtA, i, uint64(len(m.EndorsementType)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.SkillName) > 0 {
		i -= len(m.SkillName)
		copy(dAtA[i:], m.SkillName)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SkillName)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.TargetUser) > 0 {
		i -= len(m.TargetUser)
		copy(dAtA[i:], m.TargetUser)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TargetUser)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Endorser) > 0 {
		i -= len(m.Endorser)
		copy(dAtA[i:], m.Endorser)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Endorser)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateSkillEndorsementResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateSkillEndorsementResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateSkillEndorsementResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteSkillEndorsement) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteSkillEndorsement) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteSkillEndorsement) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteSkillEndorsementResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteSkillEndorsementResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteSkillEndorsementResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDisputeEndorsement) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDisputeEndorsement) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDisputeEndorsement) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Evidence) > 0 {
		i -= len(m.Evidence)
		copy(dAtA[i:], m.Evidence)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Evidence)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.DisputeReason) > 0 {
		i -= len(m.DisputeReason)
		copy(dAtA[i:], m.DisputeReason)
		i = encodeVarintTx(dAtA, i, uint64(len(m.DisputeReason)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.EndorsementId) > 0 {
		i -= len(m.EndorsementId)
		copy(dAtA[i:], m.EndorsementId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.EndorsementId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDisputeEndorsementResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDisputeEndorsementResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDisputeEndorsementResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgWithdrawStakedTokens) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgWithdrawStakedTokens) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgWithdrawStakedTokens) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.SkillName) > 0 {
		i -= len(m.SkillName)
		copy(dAtA[i:], m.SkillName)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SkillName)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgWithdrawStakedTokensResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgWithdrawStakedTokensResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgWithdrawStakedTokensResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgUpdateParams) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Authority)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Params.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgUpdateParamsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateProfile) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.DisplayName)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Bio)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Location)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Website)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Github)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Linkedin)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Twitter)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Avatar)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateProfileResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateUserProfile) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Owner)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.DisplayName)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Bio)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Location)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Website)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Github)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Linkedin)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Twitter)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Avatar)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.ReputationScore != 0 {
		n += 1 + sovTx(uint64(m.ReputationScore))
	}
	if m.CreatedAt != 0 {
		n += 1 + sovTx(uint64(m.CreatedAt))
	}
	if m.UpdatedAt != 0 {
		n += 1 + sovTx(uint64(m.UpdatedAt))
	}
	return n
}

func (m *MsgCreateUserProfileResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateUserProfile) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Owner)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.DisplayName)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Bio)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Location)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Website)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Github)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Linkedin)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Twitter)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Avatar)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.ReputationScore != 0 {
		n += 1 + sovTx(uint64(m.ReputationScore))
	}
	if m.CreatedAt != 0 {
		n += 1 + sovTx(uint64(m.CreatedAt))
	}
	if m.UpdatedAt != 0 {
		n += 1 + sovTx(uint64(m.UpdatedAt))
	}
	return n
}

func (m *MsgUpdateUserProfileResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteUserProfile) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeleteUserProfileResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateUserSkill) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Owner)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.SkillName)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ProficiencyLevel)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.YearsExperience != 0 {
		n += 1 + sovTx(uint64(m.YearsExperience))
	}
	if m.Verified {
		n += 2
	}
	l = len(m.VerifiedBy)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.VerificationDate != 0 {
		n += 1 + sovTx(uint64(m.VerificationDate))
	}
	if m.EndorsementCount != 0 {
		n += 1 + sovTx(uint64(m.EndorsementCount))
	}
	return n
}

func (m *MsgCreateUserSkillResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateUserSkill) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Owner)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.SkillName)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ProficiencyLevel)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.YearsExperience != 0 {
		n += 1 + sovTx(uint64(m.YearsExperience))
	}
	if m.Verified {
		n += 2
	}
	l = len(m.VerifiedBy)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.VerificationDate != 0 {
		n += 1 + sovTx(uint64(m.VerificationDate))
	}
	if m.EndorsementCount != 0 {
		n += 1 + sovTx(uint64(m.EndorsementCount))
	}
	return n
}

func (m *MsgUpdateUserSkillResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteUserSkill) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeleteUserSkillResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgEndorseSkill) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.TargetUser)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.SkillName)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.EndorsementType)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Comment)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.StakeTokens != 0 {
		n += 1 + sovTx(uint64(m.StakeTokens))
	}
	return n
}

func (m *MsgEndorseSkillResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateSkillEndorsement) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Endorser)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.TargetUser)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.SkillName)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.EndorsementType)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Comment)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.CreatedAt != 0 {
		n += 1 + sovTx(uint64(m.CreatedAt))
	}
	if m.SkillTokensStaked != 0 {
		n += 1 + sovTx(uint64(m.SkillTokensStaked))
	}
	return n
}

func (m *MsgCreateSkillEndorsementResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateSkillEndorsement) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Endorser)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.TargetUser)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.SkillName)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.EndorsementType)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Comment)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.CreatedAt != 0 {
		n += 1 + sovTx(uint64(m.CreatedAt))
	}
	if m.SkillTokensStaked != 0 {
		n += 1 + sovTx(uint64(m.SkillTokensStaked))
	}
	return n
}

func (m *MsgUpdateSkillEndorsementResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteSkillEndorsement) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeleteSkillEndorsementResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDisputeEndorsement) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.EndorsementId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.DisputeReason)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Evidence)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDisputeEndorsementResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgWithdrawStakedTokens) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.SkillName)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgWithdrawStakedTokensResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgUpdateParams) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateParams: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateParams: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Authority = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateParamsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateParamsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateParamsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateProfile) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateProfile: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateProfile: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisplayName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DisplayName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Bio", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Bio = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Location", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Location = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Website", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Website = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Github", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Github = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Linkedin", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Linkedin = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Twitter", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Twitter = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Avatar", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Avatar = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateProfileResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateProfileResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateProfileResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateUserProfile) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateUserProfile: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateUserProfile: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Owner", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Owner = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisplayName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DisplayName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Bio", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Bio = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Location", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Location = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Website", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Website = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Github", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Github = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Linkedin", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Linkedin = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Twitter", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Twitter = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Avatar", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Avatar = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReputationScore", wireType)
			}
			m.ReputationScore = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReputationScore |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			m.CreatedAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CreatedAt |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdatedAt", wireType)
			}
			m.UpdatedAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UpdatedAt |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateUserProfileResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateUserProfileResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateUserProfileResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateUserProfile) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateUserProfile: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateUserProfile: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Owner", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Owner = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisplayName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DisplayName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Bio", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Bio = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Location", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Location = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Website", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Website = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Github", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Github = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Linkedin", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Linkedin = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Twitter", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Twitter = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Avatar", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Avatar = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReputationScore", wireType)
			}
			m.ReputationScore = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReputationScore |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			m.CreatedAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CreatedAt |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdatedAt", wireType)
			}
			m.UpdatedAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UpdatedAt |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateUserProfileResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateUserProfileResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateUserProfileResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteUserProfile) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteUserProfile: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteUserProfile: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteUserProfileResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteUserProfileResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteUserProfileResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateUserSkill) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateUserSkill: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateUserSkill: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Owner", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Owner = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SkillName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SkillName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProficiencyLevel", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProficiencyLevel = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field YearsExperience", wireType)
			}
			m.YearsExperience = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.YearsExperience |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Verified", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Verified = bool(v != 0)
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VerifiedBy", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.VerifiedBy = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VerificationDate", wireType)
			}
			m.VerificationDate = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.VerificationDate |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EndorsementCount", wireType)
			}
			m.EndorsementCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EndorsementCount |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateUserSkillResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateUserSkillResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateUserSkillResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateUserSkill) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateUserSkill: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateUserSkill: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Owner", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Owner = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SkillName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SkillName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProficiencyLevel", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProficiencyLevel = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field YearsExperience", wireType)
			}
			m.YearsExperience = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.YearsExperience |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Verified", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Verified = bool(v != 0)
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VerifiedBy", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.VerifiedBy = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VerificationDate", wireType)
			}
			m.VerificationDate = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.VerificationDate |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EndorsementCount", wireType)
			}
			m.EndorsementCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EndorsementCount |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateUserSkillResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateUserSkillResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateUserSkillResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteUserSkill) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteUserSkill: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteUserSkill: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteUserSkillResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteUserSkillResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteUserSkillResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgEndorseSkill) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgEndorseSkill: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgEndorseSkill: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TargetUser", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TargetUser = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SkillName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SkillName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EndorsementType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EndorsementType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Comment", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Comment = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StakeTokens", wireType)
			}
			m.StakeTokens = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.StakeTokens |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgEndorseSkillResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgEndorseSkillResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgEndorseSkillResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateSkillEndorsement) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateSkillEndorsement: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateSkillEndorsement: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Endorser", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Endorser = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TargetUser", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TargetUser = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SkillName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SkillName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EndorsementType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EndorsementType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Comment", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Comment = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			m.CreatedAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CreatedAt |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SkillTokensStaked", wireType)
			}
			m.SkillTokensStaked = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SkillTokensStaked |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateSkillEndorsementResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateSkillEndorsementResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateSkillEndorsementResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateSkillEndorsement) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateSkillEndorsement: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateSkillEndorsement: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Endorser", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Endorser = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TargetUser", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TargetUser = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SkillName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SkillName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EndorsementType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EndorsementType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Comment", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Comment = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			m.CreatedAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CreatedAt |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SkillTokensStaked", wireType)
			}
			m.SkillTokensStaked = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SkillTokensStaked |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateSkillEndorsementResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateSkillEndorsementResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateSkillEndorsementResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteSkillEndorsement) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteSkillEndorsement: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteSkillEndorsement: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteSkillEndorsementResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteSkillEndorsementResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteSkillEndorsementResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDisputeEndorsement) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDisputeEndorsement: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDisputeEndorsement: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EndorsementId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EndorsementId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisputeReason", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DisputeReason = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Evidence", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Evidence = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDisputeEndorsementResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDisputeEndorsementResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDisputeEndorsementResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgWithdrawStakedTokens) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgWithdrawStakedTokens: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgWithdrawStakedTokens: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SkillName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SkillName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgWithdrawStakedTokensResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgWithdrawStakedTokensResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgWithdrawStakedTokensResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
