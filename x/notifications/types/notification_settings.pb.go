// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: skillchain/notifications/notification_settings.proto

package types

import (
	fmt "fmt"
	proto "github.com/cosmos/gogoproto/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type NotificationSettings struct {
	Index             string   `protobuf:"bytes,1,opt,name=index,proto3" json:"index,omitempty"`
	UserAddress       string   `protobuf:"bytes,2,opt,name=userAddress,proto3" json:"userAddress,omitempty"`
	EmailEnabled      bool     `protobuf:"varint,3,opt,name=emailEnabled,proto3" json:"emailEnabled,omitempty"`
	PushEnabled       bool     `protobuf:"varint,4,opt,name=pushEnabled,proto3" json:"pushEnabled,omitempty"`
	SmsEnabled        bool     `protobuf:"varint,5,opt,name=smsEnabled,proto3" json:"smsEnabled,omitempty"`
	EmailAddress      string   `protobuf:"bytes,6,opt,name=emailAddress,proto3" json:"emailAddress,omitempty"`
	PhoneNumber       string   `protobuf:"bytes,7,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`
	NotificationTypes []string `protobuf:"bytes,8,rep,name=notificationTypes,proto3" json:"notificationTypes,omitempty"`
	Frequency         string   `protobuf:"bytes,9,opt,name=frequency,proto3" json:"frequency,omitempty"`
	Creator           string   `protobuf:"bytes,10,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *NotificationSettings) Reset()         { *m = NotificationSettings{} }
func (m *NotificationSettings) String() string { return proto.CompactTextString(m) }
func (*NotificationSettings) ProtoMessage()    {}
func (*NotificationSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_bc96ad678295c4cd, []int{0}
}
func (m *NotificationSettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NotificationSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NotificationSettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NotificationSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NotificationSettings.Merge(m, src)
}
func (m *NotificationSettings) XXX_Size() int {
	return m.Size()
}
func (m *NotificationSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_NotificationSettings.DiscardUnknown(m)
}

var xxx_messageInfo_NotificationSettings proto.InternalMessageInfo

func (m *NotificationSettings) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

func (m *NotificationSettings) GetUserAddress() string {
	if m != nil {
		return m.UserAddress
	}
	return ""
}

func (m *NotificationSettings) GetEmailEnabled() bool {
	if m != nil {
		return m.EmailEnabled
	}
	return false
}

func (m *NotificationSettings) GetPushEnabled() bool {
	if m != nil {
		return m.PushEnabled
	}
	return false
}

func (m *NotificationSettings) GetSmsEnabled() bool {
	if m != nil {
		return m.SmsEnabled
	}
	return false
}

func (m *NotificationSettings) GetEmailAddress() string {
	if m != nil {
		return m.EmailAddress
	}
	return ""
}

func (m *NotificationSettings) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *NotificationSettings) GetNotificationTypes() []string {
	if m != nil {
		return m.NotificationTypes
	}
	return nil
}

func (m *NotificationSettings) GetFrequency() string {
	if m != nil {
		return m.Frequency
	}
	return ""
}

func (m *NotificationSettings) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func init() {
	proto.RegisterType((*NotificationSettings)(nil), "skillchain.notifications.NotificationSettings")
}

func init() {
	proto.RegisterFile("skillchain/notifications/notification_settings.proto", fileDescriptor_bc96ad678295c4cd)
}

var fileDescriptor_bc96ad678295c4cd = []byte{
	// 295 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x91, 0xbd, 0x4e, 0xc3, 0x30,
	0x14, 0x85, 0xe3, 0x96, 0xfe, 0xc4, 0xb0, 0x60, 0x75, 0xf0, 0x80, 0xac, 0xa8, 0x53, 0x06, 0x54,
	0x06, 0x98, 0xd8, 0x40, 0x62, 0xed, 0x10, 0x98, 0x58, 0x50, 0x7e, 0x6e, 0x89, 0x45, 0x62, 0x07,
	0xdb, 0x91, 0xda, 0xb7, 0xe0, 0xb1, 0x18, 0x3b, 0x32, 0x56, 0xc9, 0x8b, 0xa0, 0xba, 0x84, 0x3a,
	0x30, 0xde, 0xef, 0x9e, 0xeb, 0x73, 0xe4, 0x83, 0x6f, 0xf4, 0x1b, 0x2f, 0x8a, 0x34, 0x8f, 0xb9,
	0xb8, 0x12, 0xd2, 0xf0, 0x15, 0x4f, 0x63, 0xc3, 0xa5, 0xd0, 0xbd, 0xe9, 0x45, 0x83, 0x31, 0x5c,
	0xbc, 0xea, 0x45, 0xa5, 0xa4, 0x91, 0x84, 0x1e, 0xaf, 0x16, 0xbd, 0xab, 0xf9, 0x6e, 0x80, 0x67,
	0x4b, 0x87, 0x3c, 0xfe, 0x1c, 0x92, 0x19, 0x1e, 0x71, 0x91, 0xc1, 0x9a, 0xa2, 0x00, 0x85, 0x7e,
	0x74, 0x18, 0x48, 0x80, 0x4f, 0x6b, 0x0d, 0xea, 0x2e, 0xcb, 0x14, 0x68, 0x4d, 0x07, 0x76, 0xe7,
	0x22, 0x32, 0xc7, 0x67, 0x50, 0xc6, 0xbc, 0x78, 0x10, 0x71, 0x52, 0x40, 0x46, 0x87, 0x01, 0x0a,
	0xa7, 0x51, 0x8f, 0xed, 0x5f, 0xa9, 0x6a, 0x9d, 0x77, 0x92, 0x13, 0x2b, 0x71, 0x11, 0x61, 0x18,
	0xeb, 0x52, 0x77, 0x82, 0x91, 0x15, 0x38, 0xe4, 0xd7, 0xa5, 0x0b, 0x32, 0xb6, 0x41, 0x7a, 0xcc,
	0xba, 0xe4, 0x52, 0xc0, 0xb2, 0x2e, 0x13, 0x50, 0x74, 0x72, 0xc8, 0xea, 0x20, 0x72, 0x89, 0xcf,
	0xdd, 0xdf, 0x78, 0xda, 0x54, 0xa0, 0xe9, 0x34, 0x18, 0x86, 0x7e, 0xf4, 0x7f, 0x41, 0x2e, 0xb0,
	0xbf, 0x52, 0xf0, 0x5e, 0x83, 0x48, 0x37, 0xd4, 0xb7, 0xaf, 0x1d, 0x01, 0xa1, 0x78, 0x92, 0x2a,
	0x88, 0x8d, 0x54, 0x14, 0xdb, 0x5d, 0x37, 0xde, 0xdf, 0x7e, 0x36, 0x0c, 0x6d, 0x1b, 0x86, 0x76,
	0x0d, 0x43, 0x1f, 0x2d, 0xf3, 0xb6, 0x2d, 0xf3, 0xbe, 0x5a, 0xe6, 0x3d, 0x07, 0x4e, 0x99, 0xeb,
	0x3f, 0x75, 0x9a, 0xbd, 0x67, 0x32, 0xb6, 0xfd, 0x5d, 0x7f, 0x07, 0x00, 0x00, 0xff, 0xff, 0xd0,
	0x15, 0xa7, 0xb2, 0xf7, 0x01, 0x00, 0x00,
}

func (m *NotificationSettings) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NotificationSettings) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NotificationSettings) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintNotificationSettings(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0x52
	}
	if len(m.Frequency) > 0 {
		i -= len(m.Frequency)
		copy(dAtA[i:], m.Frequency)
		i = encodeVarintNotificationSettings(dAtA, i, uint64(len(m.Frequency)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.NotificationTypes) > 0 {
		for iNdEx := len(m.NotificationTypes) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.NotificationTypes[iNdEx])
			copy(dAtA[i:], m.NotificationTypes[iNdEx])
			i = encodeVarintNotificationSettings(dAtA, i, uint64(len(m.NotificationTypes[iNdEx])))
			i--
			dAtA[i] = 0x42
		}
	}
	if len(m.PhoneNumber) > 0 {
		i -= len(m.PhoneNumber)
		copy(dAtA[i:], m.PhoneNumber)
		i = encodeVarintNotificationSettings(dAtA, i, uint64(len(m.PhoneNumber)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.EmailAddress) > 0 {
		i -= len(m.EmailAddress)
		copy(dAtA[i:], m.EmailAddress)
		i = encodeVarintNotificationSettings(dAtA, i, uint64(len(m.EmailAddress)))
		i--
		dAtA[i] = 0x32
	}
	if m.SmsEnabled {
		i--
		if m.SmsEnabled {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if m.PushEnabled {
		i--
		if m.PushEnabled {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.EmailEnabled {
		i--
		if m.EmailEnabled {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if len(m.UserAddress) > 0 {
		i -= len(m.UserAddress)
		copy(dAtA[i:], m.UserAddress)
		i = encodeVarintNotificationSettings(dAtA, i, uint64(len(m.UserAddress)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintNotificationSettings(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintNotificationSettings(dAtA []byte, offset int, v uint64) int {
	offset -= sovNotificationSettings(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *NotificationSettings) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovNotificationSettings(uint64(l))
	}
	l = len(m.UserAddress)
	if l > 0 {
		n += 1 + l + sovNotificationSettings(uint64(l))
	}
	if m.EmailEnabled {
		n += 2
	}
	if m.PushEnabled {
		n += 2
	}
	if m.SmsEnabled {
		n += 2
	}
	l = len(m.EmailAddress)
	if l > 0 {
		n += 1 + l + sovNotificationSettings(uint64(l))
	}
	l = len(m.PhoneNumber)
	if l > 0 {
		n += 1 + l + sovNotificationSettings(uint64(l))
	}
	if len(m.NotificationTypes) > 0 {
		for _, s := range m.NotificationTypes {
			l = len(s)
			n += 1 + l + sovNotificationSettings(uint64(l))
		}
	}
	l = len(m.Frequency)
	if l > 0 {
		n += 1 + l + sovNotificationSettings(uint64(l))
	}
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovNotificationSettings(uint64(l))
	}
	return n
}

func sovNotificationSettings(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozNotificationSettings(x uint64) (n int) {
	return sovNotificationSettings(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *NotificationSettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowNotificationSettings
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NotificationSettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NotificationSettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowNotificationSettings
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthNotificationSettings
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthNotificationSettings
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowNotificationSettings
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthNotificationSettings
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthNotificationSettings
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UserAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EmailEnabled", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowNotificationSettings
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EmailEnabled = bool(v != 0)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PushEnabled", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowNotificationSettings
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PushEnabled = bool(v != 0)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SmsEnabled", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowNotificationSettings
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SmsEnabled = bool(v != 0)
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EmailAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowNotificationSettings
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthNotificationSettings
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthNotificationSettings
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EmailAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneNumber", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowNotificationSettings
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthNotificationSettings
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthNotificationSettings
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneNumber = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NotificationTypes", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowNotificationSettings
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthNotificationSettings
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthNotificationSettings
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NotificationTypes = append(m.NotificationTypes, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Frequency", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowNotificationSettings
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthNotificationSettings
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthNotificationSettings
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Frequency = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowNotificationSettings
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthNotificationSettings
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthNotificationSettings
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipNotificationSettings(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthNotificationSettings
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipNotificationSettings(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowNotificationSettings
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowNotificationSettings
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowNotificationSettings
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthNotificationSettings
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupNotificationSettings
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthNotificationSettings
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthNotificationSettings        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowNotificationSettings          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupNotificationSettings = fmt.Errorf("proto: unexpected end of group")
)
